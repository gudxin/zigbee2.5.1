###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         01/Nov/2018  19:58:29 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  H:\学习\论文\海洋\苏\源码                          #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\Source\Coordinator.c                             #
#    Command line       =  -f "H:\学习\论文\海洋\苏\源码                      #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"   #
#                          (-DCPU32MHZ -DROOT=__near_func                     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f       #
#                          "H:\学习\论文\海洋\苏\源码                         #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"  #
#                          (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          "H:\学习\论文\海洋\苏\源码                         #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\Source\Coordinator.c" -D ZIGBEEPRO -D ZTOOL_P1   #
#                          -D xMT_TASK -D xMT_SYS_FUNC -D REFECTOR -D         #
#                          xMT_ZDO_FUNC -D NV_INT -D NV_RESTORE -lC           #
#                          "H:\学习\论文\海洋\苏\源码                         #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\CoordinatorEB-Pro\List\" -lA            #
#                          "H:\学习\论文\海洋\苏\源码                         #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\CoordinatorEB-Pro\List\"                #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "H:\学习\论文\海洋\苏\源码                         #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\CoordinatorEB-Pro\Obj\" -e --debug      #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "H:\学习\论文\海洋\苏\源码 #
#                           (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB #
#                          EE\CC2530DB\" -I "H:\学习\论文\海洋\苏\源码        #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\SOURCE\" -I                          #
#                          "H:\学习\论文\海洋\苏\源码                         #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I            #
#                          "H:\学习\论文\海洋\苏\源码                         #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I       #
#                          "H:\学习\论文\海洋\苏\源码                         #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\" #
#                           -I "H:\学习\论文\海洋\苏\源码                     #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARGET\CC #
#                          2530EB\" -I "H:\学习\论文\海洋\苏\源码             #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU\CCSO #
#                          C\" -I "H:\学习\论文\海洋\苏\源码                  #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INCLUDE\ #
#                          " -I "H:\学习\论文\海洋\苏\源码                    #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF\"    #
#                          -I "H:\学习\论文\海洋\苏\源码                      #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK\"   #
#                          -I "H:\学习\论文\海洋\苏\源码                      #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SEC\"   #
#                          -I "H:\学习\论文\海洋\苏\源码                      #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SAPI\"  #
#                          -I "H:\学习\论文\海洋\苏\源码                      #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SYS\"   #
#                          -I "H:\学习\论文\海洋\苏\源码                      #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZDO\"   #
#                          -I "H:\学习\论文\海洋\苏\源码                      #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W\"    #
#                          -I "H:\学习\论文\海洋\苏\源码                      #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\" -I     #
#                          "H:\学习\论文\海洋\苏\源码                         #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SADD #
#                          R\" -I "H:\学习\论文\海洋\苏\源码                  #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SDAT #
#                          A\" -I "H:\学习\论文\海洋\苏\源码                  #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCLUDE\" #
#                           -I "H:\学习\论文\海洋\苏\源码                     #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH_LEVE #
#                          L\" -I "H:\学习\论文\海洋\苏\源码                  #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL #
#                          \srf04\" -I "H:\学习\论文\海洋\苏\源码             #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL #
#                          \srf04\SINGLE_CHIP\" -Ohz --require_prototypes     #
#    List file          =  H:\学习\论文\海洋\苏\源码                          #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\CoordinatorEB-Pro\List\Coordinator.lst  #
#    Object file        =  H:\学习\论文\海洋\苏\源码                          #
#                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBE #
#                          E\CC2530DB\CoordinatorEB-Pro\Obj\Coordinator.r51   #
#                                                                             #
#                                                                             #
###############################################################################

H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c
      1          /*********************************************************************
      2           * INCLUDES
      3           */
      4          #include "OSAL.h"
      5          #include "ZGlobals.h"
      6          #include "AF.h"
      7          #include "aps_groups.h"
      8          #include "ZDApp.h"
      9          
     10          #include "SampleApp.h"
     11          #include "SampleAppHw.h"
     12          
     13          #include "OnBoard.h"
     14          
     15          /* HAL */
     16          #include "hal_lcd.h"
     17          #include "hal_led.h"
     18          #include "hal_key.h"
     19          #include "MT_UART.h"
     20          #include "MT_APP.h"
     21          #include "MT.h"
     22          #include "stdlib.h"
     23          #include "string.h"
     24          //#include "DHT11.h"
     25          #include <stdio.h>
     26          
     27          /*********************************************************************
     28           * CONSTANTS
     29           */
     30          
     31          /*********************************************************************
     32           * TYPEDEFS
     33           */
     34          
     35          /*********************************************************************
     36           * GLOBAL VARIABLES
     37           */
     38          typedef unsigned int  uint;

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     39          uint8 count=0;
   \                     count:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     40          uint8 cmd;
   \                     cmd:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     41          uint8 send[10];
   \                     send:
   \   000000                DS 10
   \   00000A                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     42          uint8 linked = 0;
   \                     linked:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     43          unsigned char a[80];
   \                     `a`:
   \   000000                DS 80
   \   000050                REQUIRE __INIT_XDATA_Z
     44          
     45          
     46          void Coord_UartInit(void);
     47          void Delay_MS(uint x);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     48          void Delay_MS(uint x)
   \                     Delay_MS:
     49          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
     50            uint i,j;
                          ^
Warning[Pe177]: variable "j" was declared but never referenced
     51            for(i=0;i<x;i++)
   \   000009   7E00         MOV     R6,#0x0
   \   00000B   7F00         MOV     R7,#0x0
   \   00000D   800F         SJMP    ??Delay_MS_0
     52            MicroWait(1000);
   \                     ??Delay_MS_1:
   \   00000F                ; Setup parameters for call to function Onboard_wait
   \   00000F   7AE8         MOV     R2,#-0x18
   \   000011   7B03         MOV     R3,#0x3
   \   000013   12....       LCALL   ??Onboard_wait?relay
   \   000016   EE           MOV     A,R6
   \   000017   2401         ADD     A,#0x1
   \   000019   0E           INC     R6
   \   00001A   EF           MOV     A,R7
   \   00001B   3400         ADDC    A,#0x0
   \   00001D   FF           MOV     R7,A
   \                     ??Delay_MS_0:
   \   00001E   C3           CLR     C
   \   00001F   EE           MOV     A,R6
   \   000020   95..         SUBB    A,?V0 + 0
   \   000022   EF           MOV     A,R7
   \   000023   95..         SUBB    A,?V0 + 1
   \   000025   40E8         JC      ??Delay_MS_1
     53          }
   \   000027                REQUIRE ?Subroutine0
   \   000027                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
     54          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     55          const cId_t SampleApp_ClusterList[ENDDEVICE_MAX_CLUSTERS] =
   \                     SampleApp_ClusterList:
   \   000000   0100         DW 1
     56          {
     57            ENDDEVIC1_MSG //Modified by user,区分每个终端的簇列表，第x个终端，则更改为ENDDEVICx_MSG
     58          }; 

   \                                 In  segment XDATA_ROM_C, align 1
     59          const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   01           DB 1
   \   000007   ....         DW SampleApp_ClusterList
   \   000009   01           DB 1
   \   00000A   ....         DW SampleApp_ClusterList
     60          {
     61            SAMPLEAPP_ENDPOINT,              //  int Endpoint;
     62            SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
     63            SAMPLEAPP_DEVICEID,              //  uint16 AppDeviceId[2];
     64            SAMPLEAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
     65            SAMPLEAPP_FLAGS,                 //  int   AppFlags:4;
     66            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
     67            (cId_t *)SampleApp_ClusterList,  //  uint8 *pAppInClusterList;
     68            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
     69            (cId_t *)SampleApp_ClusterList   //  uint8 *pAppInClusterList;
     70          };
     71          
     72          // This is the Endpoint/Interface description.  It is defined here, but
     73          // filled-in in SampleApp_Init().  Another way to go would be to fill
     74          // in the structure here and make it a "const" (in code space).  The
     75          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     76          endPointDesc_t SampleApp_epDesc;
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     77          
     78          /*********************************************************************
     79           * EXTERNAL VARIABLES
     80           */
     81          
     82          /*********************************************************************
     83           * EXTERNAL FUNCTIONS
     84           */
     85          
     86          /*********************************************************************
     87           * LOCAL VARIABLES
     88           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     89          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     90                                    // This variable will be received when
     91                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     92          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     93          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     94          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     95          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     96          afAddrType_t SampleApp_Periodic_DstAddr; //广播
   \                     SampleApp_Periodic_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     97          afAddrType_t SampleApp_Flash_DstAddr;    //组播
   \                     SampleApp_Flash_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     98          afAddrType_t SampleApp_P2P_DstAddr;      //点播
   \                     SampleApp_P2P_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     99          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    100          aps_Group_t SampleApp_Group;
   \                     SampleApp_Group:
   \   000000                DS 18
   \   000012                REQUIRE __INIT_XDATA_Z
    101          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    102          uint8 SampleAppPeriodicCounter = 0;
   \                     SampleAppPeriodicCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    103          uint8 SampleAppFlashCounter = 0;
   \                     SampleAppFlashCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    104          uint8 afRxData[4]={0};
   \                     afRxData:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z
    105          /*********************************************************************
    106           * LOCAL FUNCTIONS
    107           */
    108          void SampleApp_HandleKeys( uint8 shift, uint8 keys );
    109          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
    110          //void Delay_10us(void);
    111          //void Delay_ms(uint16 Time);
    112          void callback(uint8 port, uint8 event);
    113          void Delay_ms(unsigned int ms);
    114          /*********************************************************************
    115           * NETWORK LAYER CALLBACKS
    116           */
    117          
    118          /*********************************************************************
    119           * PUBLIC FUNCTIONS
    120           */
    121          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    122          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    123          { 
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    124            SampleApp_TaskID = task_id;
   \   000007   90....       MOV     DPTR,#SampleApp_TaskID
   \   00000A   F0           MOVX    @DPTR,A
    125            SampleApp_NwkState = DEV_INIT;
   \   00000B   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000E   7401         MOV     A,#0x1
   \   000010   F0           MOVX    @DPTR,A
    126            SampleApp_TransID = 0;
   \   000011   90....       MOV     DPTR,#SampleApp_TransID
   \   000014   E4           CLR     A
   \   000015   F0           MOVX    @DPTR,A
    127            Coord_UartInit();                  //串口初始化
   \   000016                ; Setup parameters for call to function Coord_UartInit
   \   000016   12....       LCALL   ??Coord_UartInit?relay
    128            MT_UartRegisterTaskID(task_id); //注册串口任务
   \   000019                ; Setup parameters for call to function MT_UartRegisterTaskID
   \   000019   EE           MOV     A,R6
   \   00001A   F9           MOV     R1,A
   \   00001B   12....       LCALL   ??MT_UartRegisterTaskID?relay
    129           
    130           
    131            // Device hardware initialization can be added here or in main() (Zmain.c).
    132            // If the hardware is application specific - add it here.
    133            // If the hardware is other parts of the device add it in main().
    134          
    135           #if defined ( BUILD_ALL_DEVICES )
    136            // The "Demo" target is setup to have BUILD_ALL_DEVICES and HOLD_AUTO_START
    137            // We are looking at a jumper (defined in SampleAppHw.c) to be jumpered
    138            // together - if they are - we will start up a coordinator. Otherwise,
    139            // the device will start as a router.
    140            if ( readCoordinatorJumper() )
    141              zgDeviceLogicalType = ZG_DEVICETYPE_COORDINATOR;
    142            else
    143              zgDeviceLogicalType = ZG_DEVICETYPE_ROUTER;
    144          #endif // BUILD_ALL_DEVICES
    145          
    146          #if defined ( HOLD_AUTO_START )
    147            // HOLD_AUTO_START is a compile option that will surpress ZDApp
    148            //  from starting the device and wait for the application to
    149            //  start the device.
    150            ZDOInitDevice(0);
    151          #endif
    152          
    153            // Setup for the periodic message's destination address
    154            // Broadcast to everyone
    155            SampleApp_Periodic_DstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
   \   00001E   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr + 8
   \   000021   740F         MOV     A,#0xf
   \   000023   F0           MOVX    @DPTR,A
    156            SampleApp_Periodic_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   000024   A3           INC     DPTR
   \   000025   7414         MOV     A,#0x14
   \   000027   F0           MOVX    @DPTR,A
    157            SampleApp_Periodic_DstAddr.addr.shortAddr = 0xFFFF;
   \   000028   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr
   \   00002B   74FF         MOV     A,#-0x1
   \   00002D   F0           MOVX    @DPTR,A
   \   00002E   A3           INC     DPTR
   \   00002F   F0           MOVX    @DPTR,A
    158          
    159            
    160            SampleApp_P2P_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //点播 
   \   000030   90....       MOV     DPTR,#SampleApp_P2P_DstAddr + 8
   \   000033   7402         MOV     A,#0x2
   \   000035   F0           MOVX    @DPTR,A
    161            SampleApp_P2P_DstAddr.endPoint = SAMPLEAPP_ENDPOINT; 
   \   000036   A3           INC     DPTR
   \   000037   7414         MOV     A,#0x14
   \   000039   F0           MOVX    @DPTR,A
    162            SampleApp_P2P_DstAddr.addr.shortAddr = 0x0000;            //发给协调器
   \   00003A   90....       MOV     DPTR,#SampleApp_P2P_DstAddr
   \   00003D   E4           CLR     A
   \   00003E   F0           MOVX    @DPTR,A
   \   00003F   A3           INC     DPTR
   \   000040   F0           MOVX    @DPTR,A
    163          
    164            // Fill out the endpoint description.
    165            SampleApp_epDesc.endPoint = SAMPLEAPP_ENDPOINT;
   \   000041   90....       MOV     DPTR,#SampleApp_epDesc
   \   000044   7414         MOV     A,#0x14
   \   000046   F0           MOVX    @DPTR,A
    166            SampleApp_epDesc.task_id = &SampleApp_TaskID;
   \   000047   A3           INC     DPTR
   \   000048   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   00004A   F0           MOVX    @DPTR,A
   \   00004B   A3           INC     DPTR
   \   00004C   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   00004E   F0           MOVX    @DPTR,A
    167            SampleApp_epDesc.simpleDesc
    168                      = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
   \   00004F   A3           INC     DPTR
   \   000050   74..         MOV     A,#SampleApp_SimpleDesc & 0xff
   \   000052   F0           MOVX    @DPTR,A
   \   000053   A3           INC     DPTR
   \   000054   74..         MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
   \   000056   F0           MOVX    @DPTR,A
    169            SampleApp_epDesc.latencyReq = noLatencyReqs;
   \   000057   A3           INC     DPTR
   \   000058   E4           CLR     A
   \   000059   F0           MOVX    @DPTR,A
    170          
    171            // Register the endpoint description with the AF
    172            afRegister( &SampleApp_epDesc );
   \   00005A                ; Setup parameters for call to function afRegister
   \   00005A   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   00005C   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   00005E   12....       LCALL   ??afRegister?relay
    173          
    174            // Register for all key events - This app will handle all key events
    175            RegisterForKeys( SampleApp_TaskID );
   \   000061                ; Setup parameters for call to function RegisterForKeys
   \   000061   90....       MOV     DPTR,#SampleApp_TaskID
   \   000064   E0           MOVX    A,@DPTR
   \   000065   F9           MOV     R1,A
   \   000066   12....       LCALL   ??RegisterForKeys?relay
    176          
    177            // By default, all devices start out in Group 1
    178            SampleApp_Group.ID = 0x0001;
   \   000069   90....       MOV     DPTR,#SampleApp_Group
   \   00006C   7401         MOV     A,#0x1
   \   00006E   F0           MOVX    @DPTR,A
   \   00006F   A3           INC     DPTR
   \   000070   E4           CLR     A
   \   000071   F0           MOVX    @DPTR,A
    179            osal_memcpy( SampleApp_Group.name, "Group 1", 7 );
   \   000072                ; Setup parameters for call to function osal_memcpy
   \   000072   75....       MOV     ?V0 + 0,#`?<Constant "Group 1">` & 0xff
   \   000075   75....       MOV     ?V0 + 1,#(`?<Constant "Group 1">` >> 8) & 0xff
   \   000078   F5..         MOV     ?V0 + 2,A
   \   00007A   78..         MOV     R0,#?V0 + 0
   \   00007C   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00007F   7C07         MOV     R4,#0x7
   \   000081   7D00         MOV     R5,#0x0
   \   000083   7A..         MOV     R2,#(SampleApp_Group + 2) & 0xff
   \   000085   7B..         MOV     R3,#((SampleApp_Group + 2) >> 8) & 0xff
   \   000087   12....       LCALL   ??osal_memcpy?relay
   \   00008A   7403         MOV     A,#0x3
   \   00008C   12....       LCALL   ?DEALLOC_XSTACK8
    180            aps_AddGroup( SAMPLEAPP_ENDPOINT, &SampleApp_Group );
   \   00008F                ; Setup parameters for call to function aps_AddGroup
   \   00008F   7A..         MOV     R2,#SampleApp_Group & 0xff
   \   000091   7B..         MOV     R3,#(SampleApp_Group >> 8) & 0xff
   \   000093   7914         MOV     R1,#0x14
   \   000095   12....       LCALL   ??aps_AddGroup?relay
    181            
    182            
    183            Delay_ms(500);
   \   000098                ; Setup parameters for call to function Delay_ms
   \   000098   7AF4         MOV     R2,#-0xc
   \   00009A   7B01         MOV     R3,#0x1
   \   00009C   12....       LCALL   ??Delay_ms?relay
    184            HalUARTWrite(0, "AT+CIPMUX=1\r\n", 13);
   \   00009F                ; Setup parameters for call to function HalUARTWrite
   \   00009F   7C0D         MOV     R4,#0xd
   \   0000A1   7D00         MOV     R5,#0x0
   \   0000A3   7A..         MOV     R2,#`?<Constant "AT+CIPMUX=1\\r\\n">` & 0xff
   \   0000A5   7B..         MOV     R3,#(`?<Constant "AT+CIPMUX=1\\r\\n">` >> 8) & 0xff
   \   0000A7   12....       LCALL   ?Subroutine2 & 0xFFFF
    185            Delay_ms(200);
    186            HalUARTWrite(0, "AT+CIPSERVER=1,8080\r\n", 21);
   \                     ??CrossCallReturnLabel_0:
   \   0000AA                ; Setup parameters for call to function HalUARTWrite
   \   0000AA   7C15         MOV     R4,#0x15
   \   0000AC   7D00         MOV     R5,#0x0
   \   0000AE   7A..         MOV     R2,#`?<Constant "AT+CIPSERVER=1,8080\\r\\n">` & 0xff
   \   0000B0   7B..         MOV     R3,#(`?<Constant "AT+CIPSERVER=1,8080\\r\\n">` >> 8) & 0xff
   \   0000B2   12....       LCALL   ?Subroutine2 & 0xFFFF
    187            Delay_ms(200);
    188           
    189          #if defined ( LCD_SUPPORTED )
    190            
    191          #endif
    192          }
   \                     ??CrossCallReturnLabel_1:
   \   0000B5   7F03         MOV     R7,#0x3
   \   0000B7   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7900         MOV     R1,#0x0
   \   000002   12....       LCALL   ??HalUARTWrite?relay
   \   000005                ; Setup parameters for call to function Delay_ms
   \   000005                ; Setup parameters for call to function Delay_ms
   \   000005   7AC8         MOV     R2,#-0x38
   \   000007   7B00         MOV     R3,#0x0
   \   000009   12....       LCALL   ??Delay_ms?relay
   \   00000C   22           RET
    193          
    194          /*********************************************************************
    195           * @fn      SampleApp_ProcessEvent
    196           *
    197           * @brief   Generic Application Task event processor.  This function
    198           *          is called to process all events for the task.  Events
    199           *          include timers, messages and any other user defined events.
    200           *
    201           * @param   task_id  - The OSAL assigned task ID.
    202           * @param   events - events to process.  This is a bit map and can
    203           *                   contain more than one event.
    204           *
    205           * @return  none
    206           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    207          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    208          { 
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
    209            
    210            afIncomingMSGPacket_t *MSGpkt;
    211            (void)task_id;  // Intentionally unreferenced parameter
    212           
    213            if ( events & SYS_EVENT_MSG )
   \   000009   EB           MOV     A,R3
   \   00000A   5480         ANL     A,#0x80
   \   00000C   6044         JZ      ??SampleApp_ProcessEvent_0
    214            {
    215              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00000E                ; Setup parameters for call to function osal_msg_receive
   \   00000E   800D         SJMP    ??SampleApp_ProcessEvent_1
    216              while ( MSGpkt )
    217              {
    218                switch ( MSGpkt->hdr.event )
    219                {
    220                  // Received when a key is pressed
    221                  case KEY_CHANGE:
    222                    SampleApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    223                    break;
    224          
    225                  // Received when a messages is received (OTA) for this endpoint
    226                  case AF_INCOMING_MSG_CMD:
    227                    SampleApp_MessageMSGCB( MSGpkt );
    228                    break;
    229          
    230                  // Received whenever the device changes state in the network
    231                  case ZDO_STATE_CHANGE:
    232                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_2:
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   90....       MOV     DPTR,#SampleApp_NwkState
   \   000015   F0           MOVX    @DPTR,A
    233                    if ( (SampleApp_NwkState == DEV_ZB_COORD) )
    234                    {
    235                      
    236                    }
    237                    break;
    238                  default:
    239                    break;
    240                }
    241          
    242                // Release the memory
    243                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_3:
   \   000016                ; Setup parameters for call to function osal_msg_deallocate
   \   000016   EE           MOV     A,R6
   \   000017   FA           MOV     R2,A
   \   000018   EF           MOV     A,R7
   \   000019   FB           MOV     R3,A
   \   00001A   12....       LCALL   ??osal_msg_deallocate?relay
    244          
    245                // Next - if one is available
    246                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00001D                ; Setup parameters for call to function osal_msg_receive
   \                     ??SampleApp_ProcessEvent_1:
   \   00001D   90....       MOV     DPTR,#SampleApp_TaskID
   \   000020   E0           MOVX    A,@DPTR
   \   000021   F9           MOV     R1,A
   \   000022   12....       LCALL   ??osal_msg_receive?relay
   \   000025   8A..         MOV     ?V0 + 2,R2
   \   000027   8B..         MOV     ?V0 + 3,R3
   \   000029   AE..         MOV     R6,?V0 + 2
   \   00002B   AF..         MOV     R7,?V0 + 3
   \   00002D   EE           MOV     A,R6
   \   00002E   4F           ORL     A,R7
   \   00002F   6018         JZ      ??SampleApp_ProcessEvent_4
   \   000031   8E82         MOV     DPL,R6
   \   000033   8F83         MOV     DPH,R7
   \   000035   E0           MOVX    A,@DPTR
   \   000036   24E6         ADD     A,#-0x1a
   \   000038   6006         JZ      ??SampleApp_ProcessEvent_5
   \   00003A   2449         ADD     A,#0x49
   \   00003C   60D2         JZ      ??SampleApp_ProcessEvent_2
   \   00003E   80D6         SJMP    ??SampleApp_ProcessEvent_3
   \                     ??SampleApp_ProcessEvent_5:
   \   000040                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   000040   EE           MOV     A,R6
   \   000041   FA           MOV     R2,A
   \   000042   EF           MOV     A,R7
   \   000043   FB           MOV     R3,A
   \   000044   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   000047   80CD         SJMP    ??SampleApp_ProcessEvent_3
    247              }
    248          
    249              // return unprocessed events
    250              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_4:
   \   000049   AA..         MOV     R2,?V0 + 0
   \   00004B   E5..         MOV     A,?V0 + 1
   \   00004D   6480         XRL     A,#0x80
   \   00004F   FB           MOV     R3,A
   \   000050   8004         SJMP    ??SampleApp_ProcessEvent_6
    251            }
    252          
    253            // Discard unknown events4即
    254            return 0;
   \                     ??SampleApp_ProcessEvent_0:
   \   000052   7A00         MOV     R2,#0x0
   \   000054   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_6:
   \   000056   7F04         MOV     R7,#0x4
   \   000058   02....       LJMP    ?BANKED_LEAVE_XDATA
    255          }
    256          
    257          /*********************************************************************
    258           * Event Generation Functions
    259           */
    260          /*********************************************************************
    261           * @fn      SampleApp_HandleKeys
    262           *
    263           * @brief   Handles all key events for this device.
    264           *
    265           * @param   shift - true if in shift/alt.
    266           * @param   keys - bit field for key events. Valid entries:
    267           *                 HAL_KEY_SW_2
    268           *                 HAL_KEY_SW_1
    269           *
    270           * @return  none
    271           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    272          void SampleApp_HandleKeys( uint8 shift, uint8 keys )
   \                     SampleApp_HandleKeys:
    273          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    274           (void)shift;  // Intentionally unreferenced parameter
    275           if ( keys & HAL_KEY_SW_6 )
    276            {
    277             
    278            }
    279          
    280            if ( keys & HAL_KEY_SW_1 )
    281            {
    282            } 
    283          }
   \   000000   02....       LJMP    ?BRET
    284          
    285          /*********************************************************************
    286           * LOCAL FUNCTIONS
    287           */
    288          
    289          /*********************************************************************
    290           * @fn      SampleApp_MessageMSGCB
    291           *
    292           * @brief   Data message processor callback.  This function processes
    293           *          any incoming data - probably from other devices.  So, based
    294           *          on cluster ID, perform the intended action.
    295           *
    296           * @param   none
    297           *
    298           * @return  none
    299           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    300          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    301          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    302            uint16 flashTime;
                          ^
Warning[Pe177]: variable "flashTime" was declared but never referenced
    303          
    304            uint8 i;
    305            for (i=0;i<3;i++)
   \   000004   7D00         MOV     R5,#0x0
    306              afRxData[i] = pkt->cmd.Data[i];
   \                     ??SampleApp_MessageMSGCB_0:
   \   000006   8D82         MOV     DPL,R5
   \   000008   A882         MOV     R0,DPL
   \   00000A   7900         MOV     R1,#0x0
   \   00000C   EA           MOV     A,R2
   \   00000D   2421         ADD     A,#0x21
   \   00000F   F582         MOV     DPL,A
   \   000011   EB           MOV     A,R3
   \   000012   3400         ADDC    A,#0x0
   \   000014   F583         MOV     DPH,A
   \   000016   E0           MOVX    A,@DPTR
   \   000017   28           ADD     A,R0
   \   000018   FC           MOV     R4,A
   \   000019   A3           INC     DPTR
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   3400         ADDC    A,#0x0
   \   00001D   8C82         MOV     DPL,R4
   \   00001F   F583         MOV     DPH,A
   \   000021   E0           MOVX    A,@DPTR
   \   000022   C0E0         PUSH    A
   \   000024   74..         MOV     A,#afRxData & 0xff
   \   000026   28           ADD     A,R0
   \   000027   F582         MOV     DPL,A
   \   000029   74..         MOV     A,#(afRxData >> 8) & 0xff
   \   00002B   3400         ADDC    A,#0x0
   \   00002D   F583         MOV     DPH,A
   \   00002F   D0E0         POP     A
   \   000031   F0           MOVX    @DPTR,A
   \   000032   0D           INC     R5
   \   000033   ED           MOV     A,R5
   \   000034   C3           CLR     C
   \   000035   9403         SUBB    A,#0x3
   \   000037   40CD         JC      ??SampleApp_MessageMSGCB_0
    307            HalUARTWrite(0, "AT+CIPSEND=0,3\r\n", 15);
   \   000039                ; Setup parameters for call to function HalUARTWrite
   \   000039   7C0F         MOV     R4,#0xf
   \   00003B   7D00         MOV     R5,#0x0
   \   00003D   7A..         MOV     R2,#`?<Constant "AT+CIPSEND=0,3\\r\\n">` & 0xff
   \   00003F   7B..         MOV     R3,#(`?<Constant "AT+CIPSEND=0,3\\r\\n">` >> 8) & 0xff
   \   000041   12....       LCALL   ??HalUARTWrite?relay
    308            Delay_MS(10);
   \   000044                ; Setup parameters for call to function Delay_MS
   \   000044   7A0A         MOV     R2,#0xa
   \   000046   7B00         MOV     R3,#0x0
   \   000048   12....       LCALL   ??Delay_MS?relay
    309            HalUARTWrite(0,  afRxData, 3); //输出接收到的数据	
   \   00004B                ; Setup parameters for call to function HalUARTWrite
   \   00004B   7C03         MOV     R4,#0x3
   \   00004D   7D00         MOV     R5,#0x0
   \   00004F   7A..         MOV     R2,#afRxData & 0xff
   \   000051   7B..         MOV     R3,#(afRxData >> 8) & 0xff
   \   000053   7900         MOV     R1,#0x0
   \   000055   12....       LCALL   ??HalUARTWrite?relay
    310            
    311          }
   \   000058                REQUIRE ?Subroutine1
   \   000058                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    312          /*********************************************************************
    313           * @fn      SampleApp_SendPeriodicMessage
    314           *
    315           * @brief   Send the periodic message.
    316           *
    317           * @param   none
    318           *
    319           * @return  none
    320           */
    321          
    322          
    323          
    324          /*********************************************************************
    325           * @fn      SampleApp_Send_P2P_Message
    326           *
    327           * @brief   point to point.
    328           *
    329           * @param   none
    330           *
    331           * @return  none
    332           */
    333          
    334          //以下为协调器显示wifi模块的调试信息，可用可不用
    335          /*********************************************************************
    336          *********************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    337          void callback(uint8 port, uint8 event)
   \                     callback:
    338          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 24
   \   000005   74E8         MOV     A,#-0x18
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
    339           unsigned char a1[17];  //将接收的数据分为四个16字节大小的数组，在lcd四行显示
    340           unsigned char a2[17]; unsigned char a3[17];
    341           unsigned char a4[17];
    342           unsigned char a5[]="  +IPD"; //判断是否为wifi模块收到数据并串口发送给zigbee
    343           unsigned char a6[]="  +IPD,0,4:"; //判断是否为wifi模块收到数据并串口发送给zigbee
   \   00000C   740C         MOV     A,#0xc
   \   00000E   12....       LCALL   ?XSTACK_DISP0_8
   \   000011   AC82         MOV     R4,DPL
   \   000013   AD83         MOV     R5,DPH
   \   000015   7583..       MOV     DPH,#(`?<Constant "  +IPD,0,4:">` >> 8) & 0xff
   \   000018   7582..       MOV     DPL,#`?<Constant "  +IPD,0,4:">` & 0xff
   \   00001B   740C         MOV     A,#0xc
   \   00001D   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    344           unsigned char a7[]="Link"; //判断是否为wifi模块收到数据并串口发送给zigbee
   \   000020   85..82       MOV     DPL,?XSP + 0
   \   000023   85..83       MOV     DPH,?XSP + 1
   \   000026   AC82         MOV     R4,DPL
   \   000028   AD83         MOV     R5,DPH
   \   00002A   7583..       MOV     DPH,#(`?<Constant "Link">` >> 8) & 0xff
   \   00002D   7582..       MOV     DPL,#`?<Constant "Link">` & 0xff
   \   000030   7405         MOV     A,#0x5
   \   000032   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    345           unsigned char a8[]="Unlink"; //判断是否为wifi模块收到数据并串口发送给zigbee
   \   000035   7405         MOV     A,#0x5
   \   000037   12....       LCALL   ?XSTACK_DISP0_8
   \   00003A   AC82         MOV     R4,DPL
   \   00003C   AD83         MOV     R5,DPH
   \   00003E   7583..       MOV     DPH,#(`?<Constant "Unlink">` >> 8) & 0xff
   \   000041   7582..       MOV     DPL,#`?<Constant "Unlink">` & 0xff
   \   000044   7407         MOV     A,#0x7
   \   000046   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    346           unsigned char i=0;           //循环标志
    347           unsigned char j=0;           //循环标志
    348           unsigned char k=0;           //实际有效数据起始标志位
    349           unsigned char temp[50];      //提取出的有效数据暂存数组
    350           uint8 n=0;
    351           if ((event & (HAL_UART_RX_FULL | HAL_UART_RX_ABOUT_FULL | HAL_UART_RX_TIMEOUT))) 
   \   000049   7407         MOV     A,#0x7
   \   00004B   5E           ANL     A,R6
   \   00004C   7003         JNZ     $+5
   \   00004E   02....       LJMP    ??callback_0 & 0xFFFF
    352           {  //必须要判断event，此处确保字执行串口回调函数之前，dma已经把串口缓存区的数据完全读到
    353            HalUARTRead(0, a, 80); //从dma缓冲区读取数据
   \   000051                ; Setup parameters for call to function HalUARTRead
   \   000051   7C50         MOV     R4,#0x50
   \   000053   7D00         MOV     R5,#0x0
   \   000055   7A..         MOV     R2,#`a` & 0xff
   \   000057   7B..         MOV     R3,#(`a` >> 8) & 0xff
   \   000059   7900         MOV     R1,#0x0
   \   00005B   12....       LCALL   ??HalUARTRead?relay
    354           
    355             for(i=0;i<80;i++)      //将数据内的换行回车以空格代替，便于显示
   \   00005E   7800         MOV     R0,#0x0
    356             {
    357               if(a[i]==0x0A||a[i]==0x0D) a[i]=' ';
   \                     ??callback_1:
   \   000060   88..         MOV     ?V0 + 0,R0
   \   000062   74..         MOV     A,#`a` & 0xff
   \   000064   25..         ADD     A,?V0 + 0
   \   000066   F582         MOV     DPL,A
   \   000068   74..         MOV     A,#(`a` >> 8) & 0xff
   \   00006A   3400         ADDC    A,#0x0
   \   00006C   F583         MOV     DPH,A
   \   00006E   E0           MOVX    A,@DPTR
   \   00006F   F9           MOV     R1,A
   \   000070   740A         MOV     A,#0xa
   \   000072   69           XRL     A,R1
   \   000073   6005         JZ      ??callback_2
   \   000075   740D         MOV     A,#0xd
   \   000077   69           XRL     A,R1
   \   000078   7003         JNZ     ??callback_3
   \                     ??callback_2:
   \   00007A   7420         MOV     A,#0x20
   \   00007C   F0           MOVX    @DPTR,A
    358             }
   \                     ??callback_3:
   \   00007D   08           INC     R0
   \   00007E   E8           MOV     A,R0
   \   00007F   C3           CLR     C
   \   000080   9450         SUBB    A,#0x50
   \   000082   40DC         JC      ??callback_1
    359             if((strncmp(a8,a,6))==0)
                                ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"

     if((strncmp(a8,a,6))==0)
                    ^
"H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c",359  Warning[Pe167]: 
          argument of type "unsigned char *" is incompatible with parameter of
          type "char const *"
   \   000084                ; Setup parameters for call to function strncmp
   \   000084   75..06       MOV     ?V0 + 0,#0x6
   \   000087   75..00       MOV     ?V0 + 1,#0x0
   \   00008A   78..         MOV     R0,#?V0 + 0
   \   00008C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00008F   7C..         MOV     R4,#`a` & 0xff
   \   000091   7D..         MOV     R5,#(`a` >> 8) & 0xff
   \   000093   7407         MOV     A,#0x7
   \   000095   12....       LCALL   ?XSTACK_DISP0_8
   \   000098   AA82         MOV     R2,DPL
   \   00009A   AB83         MOV     R3,DPH
   \   00009C   12....       LCALL   ??strncmp?relay
   \   00009F   7402         MOV     A,#0x2
   \   0000A1   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000A4   8B..         MOV     ?V0 + 1,R3
   \   0000A6   EA           MOV     A,R2
   \   0000A7   45..         ORL     A,?V0 + 1
   \   0000A9   700F         JNZ     ??callback_4
    360             {
    361                Delay_MS(100);
   \   0000AB                ; Setup parameters for call to function Delay_MS
   \   0000AB   7A64         MOV     R2,#0x64
   \   0000AD   7B00         MOV     R3,#0x0
   \   0000AF   12....       LCALL   ??Delay_MS?relay
    362                 linked = 0;
   \   0000B2   90....       MOV     DPTR,#linked
   \   0000B5   E4           CLR     A
   \                     ??callback_5:
   \   0000B6   F0           MOVX    @DPTR,A
   \   0000B7   02....       LJMP    ??callback_6 & 0xFFFF
    363                
    364             }
    365             else  if((strncmp(a7,a,4))==0)
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"

     else  if((strncmp(a7,a,4))==0)
                          ^
"H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c",365  Warning[Pe167]: 
          argument of type "unsigned char *" is incompatible with parameter of
          type "char const *"
   \                     ??callback_4:
   \   0000BA                ; Setup parameters for call to function strncmp
   \   0000BA   75..04       MOV     ?V0 + 0,#0x4
   \   0000BD   75..00       MOV     ?V0 + 1,#0x0
   \   0000C0   78..         MOV     R0,#?V0 + 0
   \   0000C2   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C5   7C..         MOV     R4,#`a` & 0xff
   \   0000C7   7D..         MOV     R5,#(`a` >> 8) & 0xff
   \   0000C9   7402         MOV     A,#0x2
   \   0000CB   12....       LCALL   ?XSTACK_DISP0_8
   \   0000CE   AA82         MOV     R2,DPL
   \   0000D0   AB83         MOV     R3,DPH
   \   0000D2   12....       LCALL   ??strncmp?relay
   \   0000D5   7402         MOV     A,#0x2
   \   0000D7   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000DA   8B..         MOV     ?V0 + 1,R3
   \   0000DC   EA           MOV     A,R2
   \   0000DD   45..         ORL     A,?V0 + 1
   \   0000DF   700E         JNZ     ??callback_7
    366             {
    367                 Delay_MS(100);
   \   0000E1                ; Setup parameters for call to function Delay_MS
   \   0000E1   7A64         MOV     R2,#0x64
   \   0000E3   7B00         MOV     R3,#0x0
   \   0000E5   12....       LCALL   ??Delay_MS?relay
    368                 linked = 1;
   \   0000E8   90....       MOV     DPTR,#linked
   \   0000EB   7401         MOV     A,#0x1
   \   0000ED   80C7         SJMP    ??callback_5
    369             }
    370             else if ((strncmp(a6,a,7))==0) //比较数据头，拦截一种wifi转发给zigbee的控制指令
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"

     else if ((strncmp(a6,a,7))==0) //比较数据头，拦截一种wifi转发给zigbee的控制指令
                          ^
"H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c",370  Warning[Pe167]: 
          argument of type "unsigned char *" is incompatible with parameter of
          type "char const *"

   unsigned char a1[17];  //将接收的数据分为四个16字节大小的数组，在lcd四行显示
                 ^
"H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c",339  Warning[Pe177]: 
          variable "a1" was declared but never referenced

   unsigned char a2[17]; unsigned char a3[17];
                 ^
"H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c",340  Warning[Pe177]: 
          variable "a2" was declared but never referenced

   unsigned char a2[17]; unsigned char a3[17];
                                       ^
"H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c",340  Warning[Pe177]: 
          variable "a3" was declared but never referenced

   unsigned char a4[17];
                 ^
"H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c",341  Warning[Pe177]: 
          variable "a4" was declared but never referenced

   unsigned char a5[]="  +IPD"; //判断是否为wifi模块收到数据并串口发送给zigbee
                 ^
"H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c",342  Warning[Pe177]: 
          variable "a5" was declared but never referenced

   unsigned char k=0;           //实际有效数据起始标志位
                 ^
"H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c",348  Warning[Pe177]: 
          variable "k" was declared but never referenced

   unsigned char temp[50];      //提取出的有效数据暂存数组
                 ^
"H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c",349  Warning[Pe177]: 
          variable "temp" was declared but never referenced

   uint8 n=0;
         ^
"H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\Coordinator.c",350  Warning[Pe177]: 
          variable "n" was declared but never referenced
   \                     ??callback_7:
   \   0000EF                ; Setup parameters for call to function strncmp
   \   0000EF   75..07       MOV     ?V0 + 0,#0x7
   \   0000F2   75..00       MOV     ?V0 + 1,#0x0
   \   0000F5   78..         MOV     R0,#?V0 + 0
   \   0000F7   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000FA   7C..         MOV     R4,#`a` & 0xff
   \   0000FC   7D..         MOV     R5,#(`a` >> 8) & 0xff
   \   0000FE   740E         MOV     A,#0xe
   \   000100   12....       LCALL   ?XSTACK_DISP0_8
   \   000103   AA82         MOV     R2,DPL
   \   000105   AB83         MOV     R3,DPH
   \   000107   12....       LCALL   ??strncmp?relay
   \   00010A   7402         MOV     A,#0x2
   \   00010C   12....       LCALL   ?DEALLOC_XSTACK8
   \   00010F   8B..         MOV     ?V0 + 1,R3
   \   000111   EA           MOV     A,R2
   \   000112   45..         ORL     A,?V0 + 1
   \   000114   706C         JNZ     ??callback_6
    371             {   
    372                 for(j=0;j<4;j++)
   \   000116   7A00         MOV     R2,#0x0
    373                 {
    374                   send[j] = a[11+j];
   \                     ??callback_8:
   \   000118   8A82         MOV     DPL,R2
   \   00011A   A882         MOV     R0,DPL
   \   00011C   74..         MOV     A,#(`a` + 11) & 0xff
   \   00011E   28           ADD     A,R0
   \   00011F   F582         MOV     DPL,A
   \   000121   74..         MOV     A,#((`a` + 11) >> 8) & 0xff
   \   000123   3400         ADDC    A,#0x0
   \   000125   F583         MOV     DPH,A
   \   000127   E0           MOVX    A,@DPTR
   \   000128   C0E0         PUSH    A
   \   00012A   74..         MOV     A,#send & 0xff
   \   00012C   28           ADD     A,R0
   \   00012D   F582         MOV     DPL,A
   \   00012F   74..         MOV     A,#(send >> 8) & 0xff
   \   000131   3400         ADDC    A,#0x0
   \   000133   F583         MOV     DPH,A
   \   000135   D0E0         POP     A
   \   000137   F0           MOVX    @DPTR,A
    375                 }
   \   000138   0A           INC     R2
   \   000139   EA           MOV     A,R2
   \   00013A   C3           CLR     C
   \   00013B   9404         SUBB    A,#0x4
   \   00013D   40D9         JC      ??callback_8
    376                 AF_DataRequest( &SampleApp_Periodic_DstAddr, &SampleApp_epDesc,
    377                                 ENDDEVIC1_MSG,
    378                                 4,
    379                                 send,
    380                                 &SampleApp_TransID,
    381                                 AF_DISCV_ROUTE,
    382                                 AF_DEFAULT_RADIUS );  
   \   00013F                ; Setup parameters for call to function AF_DataRequest
   \   00013F   75..1E       MOV     ?V0 + 0,#0x1e
   \   000142   78..         MOV     R0,#?V0 + 0
   \   000144   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000147   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   00014A   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   00014D   78..         MOV     R0,#?V0 + 0
   \   00014F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000152   75....       MOV     ?V0 + 0,#send & 0xff
   \   000155   75....       MOV     ?V0 + 1,#(send >> 8) & 0xff
   \   000158   78..         MOV     R0,#?V0 + 0
   \   00015A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00015D   75..04       MOV     ?V0 + 0,#0x4
   \   000160   75..00       MOV     ?V0 + 1,#0x0
   \   000163   78..         MOV     R0,#?V0 + 0
   \   000165   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000168   75..01       MOV     ?V0 + 0,#0x1
   \   00016B   78..         MOV     R0,#?V0 + 0
   \   00016D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000170   7920         MOV     R1,#0x20
   \   000172   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   000174   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   000176   7A..         MOV     R2,#SampleApp_Periodic_DstAddr & 0xff
   \   000178   7B..         MOV     R3,#(SampleApp_Periodic_DstAddr >> 8) & 0xff
   \   00017A   12....       LCALL   ??AF_DataRequest?relay
   \   00017D   7409         MOV     A,#0x9
   \   00017F   12....       LCALL   ?DEALLOC_XSTACK8
    383             
    384             }   
    385             
    386             osal_memset(a, 0, 80); //清空a，为下次数据接收准备
   \                     ??callback_6:
   \   000182                ; Setup parameters for call to function osal_memset
   \   000182   7C50         MOV     R4,#0x50
   \   000184   7D00         MOV     R5,#0x0
   \   000186   7900         MOV     R1,#0x0
   \   000188   7A..         MOV     R2,#`a` & 0xff
   \   00018A   7B..         MOV     R3,#(`a` >> 8) & 0xff
   \   00018C   12....       LCALL   ??osal_memset?relay
    387           } 
    388          }
   \                     ??callback_0:
   \   00018F   7418         MOV     A,#0x18
   \   000191   12....       LCALL   ?DEALLOC_XSTACK8
   \   000194   02....       LJMP    ?Subroutine0 & 0xFFFF
    389          /***************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    390          void Coord_UartInit ()
   \                     Coord_UartInit:
    391          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 29
   \   000004   74E3         MOV     A,#-0x1d
   \   000006   12....       LCALL   ?ALLOC_XSTACK8
    392            halUARTCfg_t uartConfig;
    393          
    394            /* Initialize APP ID */
    395            //App_TaskID = 0;
    396          
    397            /* UART Configuration */
    398            uartConfig.configured           = TRUE;
   \   000009   85..82       MOV     DPL,?XSP + 0
   \   00000C   85..83       MOV     DPH,?XSP + 1
   \   00000F   7401         MOV     A,#0x1
   \   000011   F0           MOVX    @DPTR,A
    399            uartConfig.baudRate             = HAL_UART_BR_115200;
   \   000012   12....       LCALL   ?XSTACK_DISP0_8
   \   000015   7404         MOV     A,#0x4
   \   000017   F0           MOVX    @DPTR,A
    400            uartConfig.flowControl          = MT_UART_DEFAULT_OVERFLOW;
   \   000018   7402         MOV     A,#0x2
   \   00001A   12....       LCALL   ?XSTACK_DISP0_8
   \   00001D   E4           CLR     A
   \   00001E   F0           MOVX    @DPTR,A
    401            uartConfig.flowControlThreshold = MT_UART_DEFAULT_THRESHOLD;
   \   00001F   7403         MOV     A,#0x3
   \   000021   12....       LCALL   ?XSTACK_DISP0_8
   \   000024   7440         MOV     A,#0x40
   \   000026   F0           MOVX    @DPTR,A
   \   000027   A3           INC     DPTR
   \   000028   E4           CLR     A
   \   000029   F0           MOVX    @DPTR,A
    402            uartConfig.rx.maxBufSize        = MT_UART_DEFAULT_MAX_RX_BUFF;
   \   00002A   740A         MOV     A,#0xa
   \   00002C   12....       LCALL   ?XSTACK_DISP0_8
   \   00002F   7480         MOV     A,#-0x80
   \   000031   F0           MOVX    @DPTR,A
   \   000032   A3           INC     DPTR
   \   000033   E4           CLR     A
   \   000034   F0           MOVX    @DPTR,A
    403            uartConfig.tx.maxBufSize        = MT_UART_DEFAULT_MAX_TX_BUFF;
   \   000035   7412         MOV     A,#0x12
   \   000037   12....       LCALL   ?XSTACK_DISP0_8
   \   00003A   7480         MOV     A,#-0x80
   \   00003C   F0           MOVX    @DPTR,A
   \   00003D   A3           INC     DPTR
   \   00003E   E4           CLR     A
   \   00003F   F0           MOVX    @DPTR,A
    404            uartConfig.idleTimeout          = MT_UART_DEFAULT_IDLE_TIMEOUT;
   \   000040   7405         MOV     A,#0x5
   \   000042   12....       LCALL   ?XSTACK_DISP0_8
   \   000045   7406         MOV     A,#0x6
   \   000047   F0           MOVX    @DPTR,A
    405            uartConfig.intEnable            = TRUE;
   \   000048   7416         MOV     A,#0x16
   \   00004A   12....       LCALL   ?XSTACK_DISP0_8
   \   00004D   7401         MOV     A,#0x1
   \   00004F   F0           MOVX    @DPTR,A
    406          #if defined (ZTOOL_P1) || defined (ZTOOL_P2)
    407            uartConfig.callBackFunc         = callback;
   \   000050   741B         MOV     A,#0x1b
   \   000052   12....       LCALL   ?XSTACK_DISP0_8
   \   000055   74..         MOV     A,#??callback?relay & 0xff
   \   000057   F0           MOVX    @DPTR,A
   \   000058   A3           INC     DPTR
   \   000059   74..         MOV     A,#(??callback?relay >> 8) & 0xff
   \   00005B   F0           MOVX    @DPTR,A
    408          #elif defined (ZAPP_P1) || defined (ZAPP_P2)
    409            uartConfig.callBackFunc         = callback;
    410          #else
    411            uartConfig.callBackFunc         = callback;
    412          #endif
    413          
    414            /* Start UART */
    415          #if defined (MT_UART_DEFAULT_PORT)
    416            HalUARTOpen (MT_UART_DEFAULT_PORT, &uartConfig);
   \   00005C                ; Setup parameters for call to function HalUARTOpen
   \   00005C   85..82       MOV     DPL,?XSP + 0
   \   00005F   85..83       MOV     DPH,?XSP + 1
   \   000062   AA82         MOV     R2,DPL
   \   000064   AB83         MOV     R3,DPH
   \   000066   7900         MOV     R1,#0x0
   \   000068   12....       LCALL   ??HalUARTOpen?relay
    417          #else
    418            /* Silence IAR compiler warning */
    419            (void)uartConfig;
    420          #endif
    421          
    422            /* Initialize for ZApp */
    423          #if defined (ZAPP_P1) || defined (ZAPP_P2)
    424            /* Default max bytes that ZAPP can take */
    425            MT_UartMaxZAppBufLen  = 1;
    426            MT_UartZAppRxStatus   = MT_UART_ZAPP_RX_READY;
    427          #endif
    428          
    429          }
   \   00006B   741D         MOV     A,#0x1d
   \   00006D   12....       LCALL   ?DEALLOC_XSTACK8
   \   000070   02....       LJMP    ?Subroutine1 & 0xFFFF
    430          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    431          void Delay_ms(unsigned int ms)
   \                     Delay_ms:
    432          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   800E         SJMP    ??Delay_ms_0
    433            unsigned int i;
                                ^
Warning[Pe177]: variable "i" was declared but never referenced
    434            while(ms != 0)
    435            {  
    436             MicroWait(1000);  
   \                     ??Delay_ms_1:
   \   00000A                ; Setup parameters for call to function Onboard_wait
   \   00000A   7AE8         MOV     R2,#-0x18
   \   00000C   7B03         MOV     R3,#0x3
   \   00000E   12....       LCALL   ??Onboard_wait?relay
    437              ms--;  
   \   000011   EE           MOV     A,R6
   \   000012   24FF         ADD     A,#-0x1
   \   000014   1E           DEC     R6
   \   000015   EF           MOV     A,R7
   \   000016   34FF         ADDC    A,#-0x1
   \                     ??Delay_ms_0:
   \   000018   FF           MOV     R7,A
    438            }     
   \   000019   EE           MOV     A,R6
   \   00001A   4F           ORL     A,R7
   \   00001B   70ED         JNZ     ??Delay_ms_1
    439          }
   \   00001D   7F01         MOV     R7,#0x1
   \   00001F   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Delay_MS?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Delay_MS

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??callback?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    callback

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Coord_UartInit?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Coord_UartInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Delay_ms?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Delay_ms

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Group 1">`:
   \   000000   47726F75     DB "Group 1"
   \            70203100

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CIPMUX=1\\r\\n">`:
   \   000000   41542B43     DB "AT+CIPMUX=1\015\012"
   \            49504D55
   \            583D310D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CIPSERVER=1,8080\\r\\n">`:
   \   000000   41542B43     DB "AT+CIPSERVER=1,8080\015\012"
   \            49505345
   \            52564552
   \            3D312C38
   \            3038300D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "AT+CIPSEND=0,3\\r\\n">`:
   \   000000   41542B43     DB "AT+CIPSEND=0,3\015\012"
   \            49505345
   \            4E443D30
   \            2C330D0A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "  +IPD,0,4:">`:
   \   000000   20202B49     DB "  +IPD,0,4:"
   \            50442C30
   \            2C343A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Link">`:
   \   000000   4C696E6B     DB "Link"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Unlink">`:
   \   000000   556E6C69     DB "Unlink"
   \            6E6B00  

   Maximum stack usage in bytes:

     Function                    ISTACK PSTACK XSTACK
     --------                    ------ ------ ------
     Coord_UartInit                  2      0     40
       -> HalUARTOpen                4      0     58
     Delay_MS                        0      0     44
       -> Onboard_wait               0      0     20
     Delay_ms                        0      0     20
       -> Onboard_wait               0      0     18
     SampleApp_HandleKeys            0      0      0
     SampleApp_Init                  0      0     14
       -> Coord_UartInit             0      0     22
       -> MT_UartRegisterTaskID      0      0     22
       -> afRegister                 0      0     22
       -> RegisterForKeys            0      0     22
       -> osal_memcpy                0      0     28
       -> aps_AddGroup               0      0     22
       -> Delay_ms                   0      0     22
       -> HalUARTWrite               0      0     22
       -> Delay_ms                   0      0     22
       -> HalUARTWrite               0      0     22
       -> Delay_ms                   0      0     22
     SampleApp_MessageMSGCB          3      0     12
       -> HalUARTWrite               4      0      0
       -> Delay_MS                   4      0      0
       -> HalUARTWrite               4      0      0
     SampleApp_ProcessEvent          0      0     12
       -> osal_msg_receive           0      0     24
       -> osal_msg_deallocate        0      0     24
       -> osal_msg_receive           0      0     24
       -> SampleApp_MessageMSGCB     0      0     24
     callback                        2      0     43
       -> HalUARTRead                0      0     68
       -> strncmp                    0      0     72
       -> Delay_MS                   0      0     68
       -> strncmp                    0      0     72
       -> Delay_MS                   0      0     68
       -> strncmp                    0      0     72
       -> AF_DataRequest             0      0     86
       -> osal_memset                0      0     68


   Segment part sizes:

     Function/Label                        Bytes
     --------------                        -----
     count                                    1
     cmd                                      1
     send                                    10
     linked                                   1
     a                                       80
     Delay_MS                                39
     ?Subroutine0                             5
     SampleApp_ClusterList                    2
     SampleApp_SimpleDesc                    12
     SampleApp_epDesc                         6
     SampleApp_TaskID                         1
     SampleApp_NwkState                       1
     SampleApp_TransID                        1
     SampleApp_Periodic_DstAddr              12
     SampleApp_Flash_DstAddr                 12
     SampleApp_P2P_DstAddr                   12
     SampleApp_Group                         18
     SampleAppPeriodicCounter                 1
     SampleAppFlashCounter                    1
     afRxData                                 4
     SampleApp_Init                         186
     ?Subroutine2                            13
     SampleApp_ProcessEvent                  91
     SampleApp_HandleKeys                     3
     SampleApp_MessageMSGCB                  88
     ?Subroutine1                             7
     callback                               407
     Coord_UartInit                         115
     Delay_ms                                34
     ??Delay_MS?relay                         6
     ??SampleApp_Init?relay                   6
     ??SampleApp_ProcessEvent?relay           6
     ??SampleApp_HandleKeys?relay             6
     ??SampleApp_MessageMSGCB?relay           6
     ??callback?relay                         6
     ??Coord_UartInit?relay                   6
     ??Delay_ms?relay                         6
     ?<Constant "Group 1">                    8
     ?<Constant "AT+CIPMUX=1\r\n">           14
     ?<Constant "AT+CIPSERVER=1,8080\r\n">   22
     ?<Constant "AT+CIPSEND=0,3\r\n">        17
     ?<Constant "  +IPD,0,4:">               12
     ?<Constant "Link">                       5
     ?<Constant "Unlink">                     7

 
 988 bytes in segment BANKED_CODE
  48 bytes in segment BANK_RELAYS
  99 bytes in segment XDATA_ROM_C
 162 bytes in segment XDATA_Z
 
 1 036 bytes of CODE  memory
    99 bytes of CONST memory
   162 bytes of XDATA memory

Errors: none
Warnings: 17
