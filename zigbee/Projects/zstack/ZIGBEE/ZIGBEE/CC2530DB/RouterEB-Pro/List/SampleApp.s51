///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        06/Apr/2015  09:53:43 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC /
//                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp /
//                          p\Source\SampleApp.c                              /
//    Command line       =  -f C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack /
//                          -CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.c /
//                          fg (-DCPU32MHZ -DROOT=__near_func                 /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE -DRTR_NWK        /
//                          -DBLINK_LEDS) -f C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-Œ /
//                          ﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack /
//                          \Samples\SampleApp\CC2530DB\..\..\..\Tools\CC2530 /
//                          DB\f8wConfig.cfg (-DSECURE=0                      /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 C:\Users\lu\Desktop\5.µ„≤• /
//                          Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\ /
//                          zstack\Samples\SampleApp\Source\SampleApp.c -D    /
//                          ZIGBEEPRO -D ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC   /
//                          -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC         /
//                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC /
//                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\RouterEB-Pro\List\ -lA                 /
//                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC /
//                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\RouterEB-Pro\List\ --diag_suppress     /
//                          Pe001,Pa010 -o C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-Œﬁœ /
//                          ﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\S /
//                          amples\SampleApp\CC2530DB\RouterEB-Pro\Obj\ -e    /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack /
//                          -CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂- /
//                          ŒﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstac /
//                          k\Samples\SampleApp\CC2530DB\..\SOURCE\ -I        /
//                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC /
//                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I            /
//                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC /
//                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\..\..\COMPONENTS\MT\ -I       /
//                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC /
//                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\ /
//                           -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStac /
//                          k-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Samp /
//                          leApp\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG /
//                          ET\CC2530EB\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-Œﬁ /
//                          œﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ /
//                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONE /
//                          NTS\OSAL\MCU\CCSOC\ -I C:\Users\lu\Desktop\5.µ„≤• /
//                          Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\ /
//                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\ /
//                          COMPONENTS\OSAL\INCLUDE\ -I                       /
//                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC /
//                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF\    /
//                          -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack /
//                          -CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK /
//                          \ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZSta /
//                          ck-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          EC\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZS /
//                          tack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\S /
//                          ampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK /
//                          \SAPI\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂ /
//                          \ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ST /
//                          ACK\SYS\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ® /
//                          —∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp /
//                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ /
//                          STACK\ZDO\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-Œﬁœﬂ /
//                          Õ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sa /
//                          mples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENT /
//                          S\ZMAC\F8W\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-Œﬁœ /
//                          ﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\S /
//                          amples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN /
//                          TS\ZMAC\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ® /
//                          —∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp /
//                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ /
//                          SERVICES\SADDR\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂ /
//                          -ŒﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zsta /
//                          ck\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP /
//                          ONENTS\SERVICES\SDATA\ -I                         /
//                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC /
//                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCLUDE\ /
//                           -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStac /
//                          k-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Samp /
//                          leApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH /
//                          _LEVEL\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®— /
//                          ∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\M /
//                          AC\LOW_LEVEL\srf04\ -I C:\Users\lu\Desktop\5.µ„≤• /
//                          Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\ /
//                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\ /
//                          COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -Ohz  /
//                          --require_prototypes                              /
//    List file          =  C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC /
//                          2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\RouterEB-Pro\List\SampleApp.s51        /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME SampleApp

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??SampleApp_HandleKeys?relay
        FUNCTION ??SampleApp_HandleKeys?relay,0203H
        PUBLIC ??SampleApp_Init?relay
        FUNCTION ??SampleApp_Init?relay,0203H
        PUBLIC ??SampleApp_MessageMSGCB?relay
        FUNCTION ??SampleApp_MessageMSGCB?relay,0203H
        PUBLIC ??SampleApp_ProcessEvent?relay
        FUNCTION ??SampleApp_ProcessEvent?relay,0203H
        PUBLIC ??SampleApp_Send_P2P_Message?relay
        FUNCTION ??SampleApp_Send_P2P_Message?relay,0203H
        PUBLIC SampleApp_ClusterList
        PUBLIC SampleApp_HandleKeys
        FUNCTION SampleApp_HandleKeys,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC SampleApp_Init
        FUNCTION SampleApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC SampleApp_MessageMSGCB
        FUNCTION SampleApp_MessageMSGCB,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC SampleApp_NwkState
        PUBLIC SampleApp_P2P_DstAddr
        PUBLIC SampleApp_ProcessEvent
        FUNCTION SampleApp_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC SampleApp_Send_P2P_Message
        FUNCTION SampleApp_Send_P2P_Message,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 29, STACK
        PUBLIC SampleApp_SimpleDesc
        PUBLIC SampleApp_TaskID
        PUBLIC SampleApp_TransID
        PUBLIC SampleApp_epDesc
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
MT_UartInit         SYMBOL "MT_UartInit"
MT_UartRegisterTaskID SYMBOL "MT_UartRegisterTaskID"
afRegister          SYMBOL "afRegister"
RegisterForKeys     SYMBOL "RegisterForKeys"
osal_msg_receive    SYMBOL "osal_msg_receive"
osal_start_timerEx  SYMBOL "osal_start_timerEx"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
osal_rand           SYMBOL "osal_rand"
HalUARTWrite        SYMBOL "HalUARTWrite"
AF_DataRequest      SYMBOL "AF_DataRequest"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??HalUARTWrite?relay SYMBOL "?relay", HalUARTWrite
??MT_UartInit?relay SYMBOL "?relay", MT_UartInit
??MT_UartRegisterTaskID?relay SYMBOL "?relay", MT_UartRegisterTaskID
??RegisterForKeys?relay SYMBOL "?relay", RegisterForKeys
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_rand?relay   SYMBOL "?relay", osal_rand
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
SampleApp_HandleKeys SYMBOL "SampleApp_HandleKeys"
??SampleApp_HandleKeys?relay SYMBOL "?relay", SampleApp_HandleKeys
SampleApp_Init      SYMBOL "SampleApp_Init"
??SampleApp_Init?relay SYMBOL "?relay", SampleApp_Init
SampleApp_MessageMSGCB SYMBOL "SampleApp_MessageMSGCB"
??SampleApp_MessageMSGCB?relay SYMBOL "?relay", SampleApp_MessageMSGCB
SampleApp_ProcessEvent SYMBOL "SampleApp_ProcessEvent"
??SampleApp_ProcessEvent?relay SYMBOL "?relay", SampleApp_ProcessEvent
SampleApp_Send_P2P_Message SYMBOL "SampleApp_Send_P2P_Message"
??SampleApp_Send_P2P_Message?relay SYMBOL "?relay", SampleApp_Send_P2P_Message

        EXTERN MT_UartInit
        FUNCTION MT_UartInit,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MT_UartRegisterTaskID
        FUNCTION MT_UartRegisterTaskID,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RegisterForKeys
        FUNCTION RegisterForKeys,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_rand
        FUNCTION osal_rand,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTWrite
        FUNCTION HalUARTWrite,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??HalUARTWrite?relay
        FUNCTION ??HalUARTWrite?relay,00H
        EXTERN ??MT_UartInit?relay
        FUNCTION ??MT_UartInit?relay,00H
        EXTERN ??MT_UartRegisterTaskID?relay
        FUNCTION ??MT_UartRegisterTaskID?relay,00H
        EXTERN ??RegisterForKeys?relay
        FUNCTION ??RegisterForKeys?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_rand?relay
        FUNCTION ??osal_rand?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H

// C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c
//    1 /**************************************************************************************************
//    2   Filename:       SampleApp.c
//    3   Revised:        $Date: 2009-03-18 15:56:27 -0700 (Wed, 18 Mar 2009) $
//    4   Revision:       $Revision: 19453 $
//    5 
//    6   Description:    Sample Application (no Profile).
//    7 
//    8 **************************************************************************************************/
//    9 
//   10 #include "OSAL.h"
//   11 #include "ZGlobals.h"
//   12 #include "AF.h"
//   13 #include "aps_groups.h"
//   14 #include "ZDApp.h"
//   15 
//   16 #include "SampleApp.h"
//   17 #include "SampleAppHw.h"
//   18 
//   19 #include "OnBoard.h"
//   20 
//   21 /* HAL */
//   22 #include "hal_lcd.h"
//   23 #include "hal_led.h"
//   24 #include "hal_key.h"
//   25 #include "MT_UART.h"
//   26 #include "MT_APP.h"
//   27 #include "MT.h"
//   28 
//   29 /*********************************************************************
//   30  * MACROS
//   31  */
//   32 
//   33 /*********************************************************************
//   34  * CONSTANTS
//   35  */
//   36 
//   37 /*********************************************************************
//   38  * TYPEDEFS
//   39  */
//   40 
//   41 /*********************************************************************
//   42  * GLOBAL VARIABLES
//   43  */
//   44 
//   45 // This list should be filled with Application specific Cluster IDs.

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
//   46 const cId_t SampleApp_ClusterList[SAMPLEAPP_MAX_CLUSTERS] =
SampleApp_ClusterList:
        DATA16
        DW 4
        DW 0
//   47 {
//   48   SAMPLEAPP_P2P_CLUSTERID
//   49 };
//   50 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   51 const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
SampleApp_SimpleDesc:
        DB 20
        DATA16
        DW 3848
        DW 1
        DATA8
        DB 0
        DB 2
        DATA16
        DW SampleApp_ClusterList
        DATA8
        DB 2
        DATA16
        DW SampleApp_ClusterList
//   52 {
//   53   SAMPLEAPP_ENDPOINT,              //  int Endpoint;
//   54   SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
//   55   SAMPLEAPP_DEVICEID,              //  uint16 AppDeviceId[2];
//   56   SAMPLEAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
//   57   SAMPLEAPP_FLAGS,                 //  int   AppFlags:4;
//   58   SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
//   59   (cId_t *)SampleApp_ClusterList,  //  uint8 *pAppInClusterList;
//   60   SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
//   61   (cId_t *)SampleApp_ClusterList   //  uint8 *pAppInClusterList;
//   62 };
//   63 
//   64 // This is the Endpoint/Interface description.  It is defined here, but
//   65 // filled-in in SampleApp_Init().  Another way to go would be to fill
//   66 // in the structure here and make it a "const" (in code space).  The
//   67 // way it's defined in this sample app it is define in RAM.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   68 endPointDesc_t SampleApp_epDesc;
SampleApp_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z
//   69 
//   70 /*********************************************************************
//   71  * EXTERNAL VARIABLES
//   72  */
//   73 
//   74 /*********************************************************************
//   75  * EXTERNAL FUNCTIONS
//   76  */
//   77 
//   78 /*********************************************************************
//   79  * LOCAL VARIABLES
//   80  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   81 uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
SampleApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   82                           // This variable will be received when
//   83                           // SampleApp_Init() is called.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   84 devStates_t SampleApp_NwkState;
SampleApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   85 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   86 uint8 SampleApp_TransID;  // This is the unique message ID (counter)
SampleApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   87 
//   88 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   89 afAddrType_t SampleApp_P2P_DstAddr;      //µ„≤•
SampleApp_P2P_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z
//   90 
//   91 
//   92 /*********************************************************************
//   93  * LOCAL FUNCTIONS
//   94  */
//   95 void SampleApp_HandleKeys( uint8 shift, uint8 keys );
//   96 void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
//   97 void SampleApp_Send_P2P_Message(void);
//   98 /*********************************************************************
//   99  * NETWORK LAYER CALLBACKS
//  100  */
//  101 
//  102 /*********************************************************************
//  103  * PUBLIC FUNCTIONS
//  104  */
//  105 
//  106 /*********************************************************************
//  107  * @fn      SampleApp_Init
//  108  *
//  109  * @brief   Initialization function for the Generic App Task.
//  110  *          This is called during initialization and should contain
//  111  *          any application specific initialization (ie. hardware
//  112  *          initialization/setup, table initialization, power up
//  113  *          notificaiton ... ).
//  114  *
//  115  * @param   task_id - the ID assigned by OSAL.  This ID should be
//  116  *                    used to send messages and set timers.
//  117  *
//  118  * @return  none
//  119  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  120 void SampleApp_Init( uint8 task_id )
SampleApp_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function SampleApp_Init
        CODE
//  121 { 
        FUNCALL SampleApp_Init, MT_UartInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, MT_UartRegisterTaskID
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, RegisterForKeys
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//  122   SampleApp_TaskID = task_id;
        MOV     DPTR,#SampleApp_TaskID
        MOVX    @DPTR,A
//  123   SampleApp_NwkState = DEV_INIT;
        MOV     DPTR,#SampleApp_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//  124   SampleApp_TransID = 0;
        MOV     DPTR,#SampleApp_TransID
        CLR     A
        MOVX    @DPTR,A
//  125   
//  126   MT_UartInit();                  //¥Æø⁄≥ı ºªØ
        ; Setup parameters for call to function MT_UartInit
        LCALL   ??MT_UartInit?relay
//  127   MT_UartRegisterTaskID(task_id); //◊¢≤·¥Æø⁄»ŒŒÒ
        ; Setup parameters for call to function MT_UartRegisterTaskID
        MOV     A,R6
        MOV     R1,A
        LCALL   ??MT_UartRegisterTaskID?relay
//  128   
//  129   // Device hardware initialization can be added here or in main() (Zmain.c).
//  130   // If the hardware is application specific - add it here.
//  131   // If the hardware is other parts of the device add it in main().
//  132 
//  133  #if defined ( BUILD_ALL_DEVICES )
//  134   // The "Demo" target is setup to have BUILD_ALL_DEVICES and HOLD_AUTO_START
//  135   // We are looking at a jumper (defined in SampleAppHw.c) to be jumpered
//  136   // together - if they are - we will start up a coordinator. Otherwise,
//  137   // the device will start as a router.
//  138   if ( readCoordinatorJumper() )
//  139     zgDeviceLogicalType = ZG_DEVICETYPE_COORDINATOR;
//  140   else
//  141     zgDeviceLogicalType = ZG_DEVICETYPE_ROUTER;
//  142 #endif // BUILD_ALL_DEVICES
//  143 
//  144 #if defined ( HOLD_AUTO_START )
//  145   // HOLD_AUTO_START is a compile option that will surpress ZDApp
//  146   //  from starting the device and wait for the application to
//  147   //  start the device.
//  148   ZDOInitDevice(0);
//  149 #endif
//  150  
//  151   SampleApp_P2P_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //µ„≤• 
        MOV     DPTR,#SampleApp_P2P_DstAddr + 8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  152   SampleApp_P2P_DstAddr.endPoint = SAMPLEAPP_ENDPOINT; 
        INC     DPTR
        MOV     A,#0x14
        MOVX    @DPTR,A
//  153   SampleApp_P2P_DstAddr.addr.shortAddr = 0x0000;            //∑¢∏¯–≠µ˜∆˜
        MOV     DPTR,#SampleApp_P2P_DstAddr
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  154 
//  155   // Fill out the endpoint description.
//  156   SampleApp_epDesc.endPoint = SAMPLEAPP_ENDPOINT;
        MOV     DPTR,#SampleApp_epDesc
        MOV     A,#0x14
        MOVX    @DPTR,A
//  157   SampleApp_epDesc.task_id = &SampleApp_TaskID;
        INC     DPTR
        MOV     A,#SampleApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(SampleApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//  158   SampleApp_epDesc.simpleDesc
//  159             = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
        INC     DPTR
        MOV     A,#SampleApp_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//  160   SampleApp_epDesc.latencyReq = noLatencyReqs;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  161 
//  162   // Register the endpoint description with the AF
//  163   afRegister( &SampleApp_epDesc );
        ; Setup parameters for call to function afRegister
        MOV     R2,#SampleApp_epDesc & 0xff
        MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//  164 
//  165   // Register for all key events - This app will handle all key events
//  166   RegisterForKeys( SampleApp_TaskID );
        ; Setup parameters for call to function RegisterForKeys
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??RegisterForKeys?relay
        CFI EndBlock cfiBlock0
//  167 
//  168   // By default, all devices start out in Group 1
//  169  
//  170 }
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  171 
//  172 /*********************************************************************
//  173  * @fn      SampleApp_ProcessEvent
//  174  *
//  175  * @brief   Generic Application Task event processor.  This function
//  176  *          is called to process all events for the task.  Events
//  177  *          include timers, messages and any other user defined events.
//  178  *
//  179  * @param   task_id  - The OSAL assigned task ID.
//  180  * @param   events - events to process.  This is a bit map and can
//  181  *                   contain more than one event.
//  182  *
//  183  * @return  none
//  184  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  185 uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
SampleApp_ProcessEvent:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function SampleApp_ProcessEvent
        CODE
//  186 {
        FUNCALL SampleApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, SampleApp_MessageMSGCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, SampleApp_Send_P2P_Message
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_rand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  187   afIncomingMSGPacket_t *MSGpkt;
//  188   (void)task_id;  // Intentionally unreferenced parameter
//  189 
//  190   if ( events & SYS_EVENT_MSG )
        ANL     A,#0x80
        JZ      ??SampleApp_ProcessEvent_0
//  191   {
//  192     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??SampleApp_ProcessEvent_1
//  193     while ( MSGpkt )
//  194     {
//  195       switch ( MSGpkt->hdr.event )
//  196       {
//  197         // Received when a key is pressed
//  198         case KEY_CHANGE:
//  199           SampleApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
//  200           break;
//  201 
//  202         // Received when a messages is received (OTA) for this endpoint
//  203         case AF_INCOMING_MSG_CMD:
//  204           SampleApp_MessageMSGCB( MSGpkt );
//  205           break;
//  206 
//  207         // Received whenever the device changes state in the network
//  208         case ZDO_STATE_CHANGE:
//  209           SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
??SampleApp_ProcessEvent_2:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#SampleApp_NwkState
        MOVX    @DPTR,A
//  210           if ( //(SampleApp_NwkState == DEV_ZB_COORD) ||
//  211                  (SampleApp_NwkState == DEV_ROUTER)
//  212               || (SampleApp_NwkState == DEV_END_DEVICE) )
        XRL     A,#0x7
        JZ      ??SampleApp_ProcessEvent_3
        MOVX    A,@DPTR
        XRL     A,#0x6
        JNZ     ??SampleApp_ProcessEvent_4
//  213           {
//  214             // Start sending the periodic message in a regular interval.
//  215             osal_start_timerEx( SampleApp_TaskID,
//  216                               SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
//  217                               SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT );
??SampleApp_ProcessEvent_3:
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x48
        MOV     R5,#0xb
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  218           }
//  219           else
//  220           {
//  221             // Device is no longer in the network
//  222           }
//  223           break;
//  224 
//  225         default:
//  226           break;
//  227       }
//  228 
//  229       // Release the memory
//  230       osal_msg_deallocate( (uint8 *)MSGpkt );
??SampleApp_ProcessEvent_4:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_msg_deallocate?relay
//  231 
//  232       // Next - if one is available
//  233       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
??SampleApp_ProcessEvent_1:
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??SampleApp_ProcessEvent_5
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        ADD     A,#-0x1a
        JZ      ??SampleApp_ProcessEvent_6
        ADD     A,#0x49
        JZ      ??SampleApp_ProcessEvent_2
        SJMP    ??SampleApp_ProcessEvent_4
??SampleApp_ProcessEvent_6:
        ; Setup parameters for call to function SampleApp_MessageMSGCB
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??SampleApp_MessageMSGCB?relay
        SJMP    ??SampleApp_ProcessEvent_4
//  234     }
//  235 
//  236     // return unprocessed events
//  237     return (events ^ SYS_EVENT_MSG);
??SampleApp_ProcessEvent_5:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        XRL     A,#0x80
??SampleApp_ProcessEvent_7:
        MOV     R3,A
        SJMP    ??SampleApp_ProcessEvent_8
//  238   }
//  239 
//  240   // Send a message out - This event is generated by a timer
//  241   //  (setup in SampleApp_Init()).
//  242   if ( events & SAMPLEAPP_SEND_PERIODIC_MSG_EVT )
??SampleApp_ProcessEvent_0:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.0
        JNC     ??SampleApp_ProcessEvent_9
//  243   {
//  244 
//  245     SampleApp_Send_P2P_Message();
        ; Setup parameters for call to function SampleApp_Send_P2P_Message
        LCALL   ??SampleApp_Send_P2P_Message?relay
//  246 
//  247     // Setup to send message again in normal period (+ a little jitter)
//  248     osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
//  249         (SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT + (osal_rand() & 0x00FF)) );
        ; Setup parameters for call to function osal_rand
        LCALL   ??osal_rand?relay
        ; Setup parameters for call to function osal_start_timerEx
        MOV     A,R2
        ADD     A,#-0x48
        MOV     R4,A
        CLR     A
        ADDC    A,#0xb
        MOV     R5,A
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  250 
//  251     // return unprocessed events
//  252     return (events ^ SAMPLEAPP_SEND_PERIODIC_MSG_EVT);
        MOV     A,R6
        XRL     A,#0x1
        MOV     R2,A
        MOV     A,R7
        SJMP    ??SampleApp_ProcessEvent_7
//  253   }
//  254 
//  255   // Discard unknown events
//  256   return 0;
??SampleApp_ProcessEvent_9:
        MOV     R2,#0x0
        MOV     R3,#0x0
??SampleApp_ProcessEvent_8:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
//  257 }
//  258 
//  259 /*********************************************************************
//  260  * Event Generation Functions
//  261  */
//  262 /*********************************************************************
//  263  * @fn      SampleApp_HandleKeys
//  264  *
//  265  * @brief   Handles all key events for this device.
//  266  *
//  267  * @param   shift - true if in shift/alt.
//  268  * @param   keys - bit field for key events. Valid entries:
//  269  *                 HAL_KEY_SW_2
//  270  *                 HAL_KEY_SW_1
//  271  *
//  272  * @return  none
//  273  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  274 void SampleApp_HandleKeys( uint8 shift, uint8 keys )
SampleApp_HandleKeys:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function SampleApp_HandleKeys
        CODE
//  275 {
        ; Saved register size: 0
        ; Auto size: 0
//  276   (void)shift;  // Intentionally unreferenced parameter
//  277   
//  278   if ( keys & HAL_KEY_SW_1 )
//  279   {
//  280   
//  281    
//  282   }
//  283 
//  284   
//  285 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock3
//  286 
//  287 /*********************************************************************
//  288  * LOCAL FUNCTIONS
//  289  */
//  290 
//  291 /*********************************************************************
//  292  * @fn      SampleApp_MessageMSGCB
//  293  *
//  294  * @brief   Data message processor callback.  This function processes
//  295  *          any incoming data - probably from other devices.  So, based
//  296  *          on cluster ID, perform the intended action.
//  297  *
//  298  * @param   none
//  299  *
//  300  * @return  none
//  301  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  302 void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
SampleApp_MessageMSGCB:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function SampleApp_MessageMSGCB
        CODE
//  303 {
        FUNCALL SampleApp_MessageMSGCB, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_MessageMSGCB, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_MessageMSGCB, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  304   switch ( pkt->clusterId )
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x4
        JNZ     ??SampleApp_MessageMSGCB_0
        INC     DPTR
        MOVX    A,@DPTR
??SampleApp_MessageMSGCB_0:
        JNZ     ??SampleApp_MessageMSGCB_1
//  305   {
//  306     case SAMPLEAPP_P2P_CLUSTERID:
//  307       HalUARTWrite(0, "Rx:", 3);       //Ã· æΩ” ’µΩ ˝æ›
        ; Setup parameters for call to function HalUARTWrite
        MOV     R4,#0x3
        MOV     R5,#0x0
        MOV     R2,#`?<Constant "Rx:">` & 0xff
        MOV     R3,#(`?<Constant "Rx:">` >> 8) & 0xff
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
//  308       HalUARTWrite(0, pkt->cmd.Data, pkt->cmd.DataLength); //¥Æø⁄ ‰≥ˆΩ” ’µΩµƒ ˝æ›
        ; Setup parameters for call to function HalUARTWrite
        MOV     A,R6
        ADD     A,#0x1f
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0x21
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
//  309       HalUARTWrite(0, "\n", 1);         // ªÿ≥µªª––
        ; Setup parameters for call to function HalUARTWrite
        MOV     R4,#0x1
        MOV     R5,#0x0
        MOV     R2,#`?<Constant "\\n">` & 0xff
        MOV     R3,#(`?<Constant "\\n">` >> 8) & 0xff
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
//  310       break;      
//  311   }
//  312 }
??SampleApp_MessageMSGCB_1:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock4
//  313 
//  314 /*********************************************************************
//  315  * @fn      SampleApp_SendPeriodicMessage
//  316  *
//  317  * @brief   Send the periodic message.
//  318  *
//  319  * @param   none
//  320  *
//  321  * @return  none
//  322  */
//  323 
//  324 
//  325 /*********************************************************************
//  326  * @fn      SampleApp_Send_P2P_Message
//  327  *
//  328  * @brief   point to point.
//  329  *
//  330  * @param   none
//  331  *
//  332  * @return  none
//  333  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  334 void SampleApp_Send_P2P_Message( void )
SampleApp_Send_P2P_Message:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function SampleApp_Send_P2P_Message
        CODE
//  335 {
        FUNCALL SampleApp_Send_P2P_Message, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
//  336   uint8 data[10]="0123456789";
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant "0123456789">` >> 8) & 0xff
        MOV     DPL,#`?<Constant "0123456789">` & 0xff
        MOV     A,#0xa
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  337   
//  338   if ( AF_DataRequest( &SampleApp_P2P_DstAddr, &SampleApp_epDesc,
//  339                        SAMPLEAPP_P2P_CLUSTERID,
//  340                        10,
//  341                        data,
//  342                        &SampleApp_TransID,
//  343                        AF_DISCV_ROUTE,
//  344                        AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 0,#SampleApp_TransID & 0xff
        MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 0,#0xa
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0 + 0,#0x4
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     R1,#0x20
        MOV     R4,#SampleApp_epDesc & 0xff
        MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
        MOV     R2,#SampleApp_P2P_DstAddr & 0xff
        MOV     R3,#(SampleApp_P2P_DstAddr >> 8) & 0xff
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
//  345   {
//  346   }
//  347   else
//  348   {
//  349     // Error occurred in request to send.
//  350   }
//  351 }
        MOV     A,#0xa
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock5

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_HandleKeys?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_HandleKeys

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_MessageMSGCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_MessageMSGCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_Send_P2P_Message?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_Send_P2P_Message

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
`?<Constant "Rx:">`:
        DB "Rx:"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
`?<Constant "\\n">`:
        DB "\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "0123456789">`:
        DB 30H, 31H, 32H, 33H, 34H, 35H, 36H, 37H
        DB 38H, 39H

        END
//  352 /*********************************************************************
//  353 *********************************************************************/
// 
// 450 bytes in segment BANKED_CODE
//  30 bytes in segment BANK_RELAYS
//  32 bytes in segment XDATA_ROM_C
//  21 bytes in segment XDATA_Z
// 
// 480 bytes of CODE  memory
//  32 bytes of CONST memory
//  21 bytes of XDATA memory
//
//Errors: none
//Warnings: none
