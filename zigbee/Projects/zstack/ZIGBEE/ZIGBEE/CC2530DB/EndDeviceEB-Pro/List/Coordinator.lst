###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         06/Apr/2015  11:20:30 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2 #
#                          530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\ #
#                          Source\Coordinator.c                               #
#    Command line       =  -f C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack- #
#                          CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg   #
#                          (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS) -f    #
#                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2 #
#                          530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\ #
#                          CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg     #
#                          (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2 #
#                          530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\ #
#                          Source\Coordinator.c -D ZIGBEEPRO -D               #
#                          NWK_AUTO_POLL -D ZTOOL_P1 -D xMT_TASK -D           #
#                          xMT_SYS_FUNC -D xMT_ZDO_FUNC -D                    #
#                          LCD_SUPPORTED=DEBUG -lC C:\Users\lu\Desktop\5.µ„≤• #
#                          Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\z #
#                          stack\Samples\SampleApp\CC2530DB\EndDeviceEB-Pro\L #
#                          ist\ -lA C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\Z #
#                          Stack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\S #
#                          ampleApp\CC2530DB\EndDeviceEB-Pro\List\            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2 #
#                          530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\ #
#                          CC2530DB\EndDeviceEB-Pro\Obj\ -e --debug           #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I C:\Users\lu\Desktop\5.µ„≤• #
#                          Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\z #
#                          stack\Samples\SampleApp\CC2530DB\ -I               #
#                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2 #
#                          530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\ #
#                          CC2530DB\..\SOURCE\ -I C:\Users\lu\Desktop\5.µ„≤•Õ #
#                          ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zs #
#                          tack\Samples\SampleApp\CC2530DB\..\..\..\ZMAIN\TI2 #
#                          530DB\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ #
#                          ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MT\   #
#                          -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack- #
#                          CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\ #
#                           -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack #
#                          -CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sample #
#                          App\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARGET\ #
#                          CC2530EB\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ® #
#                          —∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sampl #
#                          es\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\OS #
#                          AL\MCU\CCSOC\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-Œﬁ #
#                          œﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\S #
#                          amples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENT #
#                          S\OSAL\INCLUDE\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂- #
#                          ŒﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack #
#                          \Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONE #
#                          NTS\STACK\AF\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-Œﬁ #
#                          œﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\S #
#                          amples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENT #
#                          S\STACK\NWK\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-Œﬁœ #
#                          ﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sa #
#                          mples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS #
#                          \STACK\SEC\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-Œﬁœﬂ #
#                          Õ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sam #
#                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          STACK\SAPI\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-Œﬁœﬂ #
#                          Õ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sam #
#                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          STACK\SYS\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ #
#                          ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\S #
#                          TACK\ZDO\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ® #
#                          —∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sampl #
#                          es\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ZM #
#                          AC\F8W\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂ #
#                          \ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC #
#                          \ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStac #
#                          k-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Sampl #
#                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\S #
#                          ADDR\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\Z #
#                          Stack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\S #
#                          ampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\SERVIC #
#                          ES\SDATA\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ® #
#                          —∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sampl #
#                          es\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MA #
#                          C\INCLUDE\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ #
#                          ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\M #
#                          AC\HIGH_LEVEL\ -I C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-Œ #
#                          ﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\MAC\LOW_LEVEL\srf04\ -I                         #
#                          C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2 #
#                          530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\ #
#                          CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\s #
#                          rf04\SINGLE_CHIP\ -Ohz --require_prototypes        #
#    List file          =  C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2 #
#                          530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\ #
#                          CC2530DB\EndDeviceEB-Pro\List\Coordinator.lst      #
#    Object file        =  C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2 #
#                          530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\ #
#                          CC2530DB\EndDeviceEB-Pro\Obj\Coordinator.r51       #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\lu\Desktop\5.µ„≤•Õ®—∂-ŒﬁœﬂÕ®—∂\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\Coordinator.c
      1          /**************************************************************************************************
      2            Filename:       SampleApp.c
      3            Revised:        $Date: 2009-03-18 15:56:27 -0700 (Wed, 18 Mar 2009) $
      4            Revision:       $Revision: 19453 $
      5          
      6            Description:    Sample Application (no Profile).
      7          
      8          **************************************************************************************************/
      9          
     10          #include "OSAL.h"
     11          #include "ZGlobals.h"
     12          #include "AF.h"
     13          #include "aps_groups.h"
     14          #include "ZDApp.h"
     15          #include <string.h>
     16          #include <stdio.h>
     17          #include "SampleApp.h"
     18          #include "SampleAppHw.h"
     19          
     20          #include "OnBoard.h"
     21          
     22          /* HAL */
     23          #include "hal_lcd.h"
     24          #include "hal_led.h"
     25          #include "hal_key.h"
     26          #include "MT_UART.h"
     27          #include "MT_APP.h"
     28          #include "MT.h"
     29          
     30          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     31          uint8 CMD;
   \                     CMD:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     32          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     33          const cId_t SampleApp_ClusterList[SAMPLEAPP_MAX_CLUSTERS] =
   \                     SampleApp_ClusterList:
   \   000000   0400         DW 4
   \   000002   0500         DW 5
     34          {
     35            SAMPLEAPP_P2P_CLUSTERID,
     36            GET_ENDDEVIC_ADDRES
     37          };
     38          

   \                                 In  segment XDATA_ROM_C, align 1
     39          const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   02           DB 2
   \   000007   ....         DW SampleApp_ClusterList
   \   000009   02           DB 2
   \   00000A   ....         DW SampleApp_ClusterList
     40          {
     41            SAMPLEAPP_ENDPOINT,              //  int Endpoint;
     42            SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
     43            SAMPLEAPP_DEVICEID,              //  uint16 AppDevVer:4;
     44            SAMPLEAPP_FLAGS,                 //  int  pDeviceId[2];
     45            SAMPLEAPP_DEVICE_VERSION,        //  int   Ap AppFlags:4;
     46            SAMPLEAPP_MAX_CLUSTERS,          //  uint  8  AppNumInClusters;
     47            (cId_t *)SampleApp_ClusterList,  //  uint8 *pAppInClusterList;
     48            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
     49            (cId_t *)SampleApp_ClusterList   //  uint8 *pAppInClusterList;
     50          };
     51          
     52          // This is the Endpoint/Interface description.  It is defined here, but
     53          // filled-in in SampleApp_Init().  Another way to go would be to fill
     54          // in the structure here and make it a "const" (in code space).  The
     55          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     56          endPointDesc_t SampleApp_epDesc;
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     57          
     58          /*********************************************************************
     59           * EXTERNAL VARIABLES
     60           */
     61          
     62          /*********************************************************************
     63           * EXTERNAL FUNCTIONS
     64           */
     65          
     66          /*********************************************************************
     67           * LOCAL VARIABLES
     68           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     69          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     70                                    // This variable will be received when
     71                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     72          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     73          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     74          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     75          
     76          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     77          afAddrType_t SampleApp_P2P_DstAddr;      //µ„≤•
   \                     SampleApp_P2P_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     78          
     79          
     80          /*********************************************************************
     81           * LOCAL FUNCTIONS
     82           */
     83          void SampleApp_HandleKeys( uint8 shift, uint8 keys );
     84          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
     85          void SampleApp_Send_P2P_Message(void);
     86          /*********************************************************************
     87           * NETWORK LAYER CALLBACKS
     88           */
     89          
     90          /*********************************************************************
     91           * PUBLIC FUNCTIONS
     92           */
     93          
     94          /*********************************************************************
     95           * @fn      SampleApp_Init
     96           *
     97           * @brief   Initialization function for the Generic App Task.
     98           *          This is called during initialization and should contain
     99           *          any application specific initialization (ie. hardware
    100           *          initialization/setup, table initialization, power up
    101           *          notificaiton ... ).
    102           *
    103           * @param   task_id - the ID assigned by OSAL.  This ID should be
    104           *                    used to send messages and set timers.
    105           *
    106           * @return  none
    107           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    108          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    109          { 
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    110            SampleApp_TaskID = task_id;
   \   000007   90....       MOV     DPTR,#SampleApp_TaskID
   \   00000A   F0           MOVX    @DPTR,A
    111            SampleApp_NwkState = DEV_INIT;
   \   00000B   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000E   7401         MOV     A,#0x1
   \   000010   F0           MOVX    @DPTR,A
    112            SampleApp_TransID = 0;
   \   000011   90....       MOV     DPTR,#SampleApp_TransID
   \   000014   E4           CLR     A
   \   000015   F0           MOVX    @DPTR,A
    113            
    114            MT_UartInit();                  //¥Æø⁄≥ı ºªØ
   \   000016                ; Setup parameters for call to function MT_UartInit
   \   000016   12....       LCALL   ??MT_UartInit?relay
    115            MT_UartRegisterTaskID(task_id); //◊¢≤·¥Æø⁄»ŒŒÒ
   \   000019                ; Setup parameters for call to function MT_UartRegisterTaskID
   \   000019   EE           MOV     A,R6
   \   00001A   F9           MOV     R1,A
   \   00001B   12....       LCALL   ??MT_UartRegisterTaskID?relay
    116            
    117            // Device hardware initialization can be added here or in main() (Zmain.c).
    118            // If the hardware is application specific - add it here.
    119            // If the hardware is other parts of the device add it in main().
    120          
    121           #if defined ( BUILD_ALL_DEVICES )
    122            // The "Demo" target is setup to have BUILD_ALL_DEVICES and HOLD_AUTO_START
    123            // We are looking at a jumper (defined in SampleAppHw.c) to be jumpered
    124            // together - if they are - we will start up a coordinator. Otherwise,
    125            // the device will start as a router.
    126            if ( readCoordinatorJumper() )
    127              zgDeviceLogicalType = ZG_DEVICETYPE_COORDINATOR;
    128            else
    129              zgDeviceLogicalType = ZG_DEVICETYPE_ROUTER;
    130          #endif // BUILD_ALL_DEVICES
    131          
    132          #if defined ( HOLD_AUTO_START )
    133            // HOLD_AUTO_START is a compile option that will surpress ZDApp
    134            //  from starting the device and wait for the application to
    135            //  start the device.
    136            ZDOInitDevice(0);
    137          #endif
    138           
    139            SampleApp_P2P_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //µ„≤• 
   \   00001E   90....       MOV     DPTR,#SampleApp_P2P_DstAddr + 8
   \   000021   7402         MOV     A,#0x2
   \   000023   F0           MOVX    @DPTR,A
    140            SampleApp_P2P_DstAddr.endPoint = SAMPLEAPP_ENDPOINT; 
   \   000024   A3           INC     DPTR
   \   000025   7414         MOV     A,#0x14
   \   000027   F0           MOVX    @DPTR,A
    141                       
    142          
    143            // Fill out the endpoint description.
    144            SampleApp_epDesc.endPoint = SAMPLEAPP_ENDPOINT;
   \   000028   90....       MOV     DPTR,#SampleApp_epDesc
   \   00002B   F0           MOVX    @DPTR,A
    145            SampleApp_epDesc.task_id = &SampleApp_TaskID;
   \   00002C   A3           INC     DPTR
   \   00002D   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   00002F   F0           MOVX    @DPTR,A
   \   000030   A3           INC     DPTR
   \   000031   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   000033   F0           MOVX    @DPTR,A
    146            SampleApp_epDesc.simpleDesc
    147                      = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
   \   000034   A3           INC     DPTR
   \   000035   74..         MOV     A,#SampleApp_SimpleDesc & 0xff
   \   000037   F0           MOVX    @DPTR,A
   \   000038   A3           INC     DPTR
   \   000039   74..         MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
   \   00003B   F0           MOVX    @DPTR,A
    148            SampleApp_epDesc.latencyReq = noLatencyReqs;
   \   00003C   A3           INC     DPTR
   \   00003D   E4           CLR     A
   \   00003E   F0           MOVX    @DPTR,A
    149          
    150            // Register the endpoint description with the AF
    151            afRegister( &SampleApp_epDesc );
   \   00003F                ; Setup parameters for call to function afRegister
   \   00003F   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   000041   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   000043   12....       LCALL   ??afRegister?relay
    152          
    153            // Register for all key events - This app will handle all key events
    154            RegisterForKeys( SampleApp_TaskID );
   \   000046                ; Setup parameters for call to function RegisterForKeys
   \   000046   90....       MOV     DPTR,#SampleApp_TaskID
   \   000049   E0           MOVX    A,@DPTR
   \   00004A   F9           MOV     R1,A
   \   00004B   12....       LCALL   ??RegisterForKeys?relay
    155          
    156            // By default, all devices start out in Group 1
    157           
    158          }
   \   00004E   7F01         MOV     R7,#0x1
   \   000050   02....       LJMP    ?BANKED_LEAVE_XDATA
    159          
    160          /*********************************************************************
    161           * @fn      SampleApp_ProcessEvent
    162           *
    163           * @brief   Generic Application Task event processor.  This function
    164           *          is called to process all events for the task.  Events
    165           *          include timers, messages and any other user defined events.
    166           *
    167           * @param   task_id  - The OSAL assigned task ID.
    168           * @param   events - events to process.  This is a bit map and can
    169           *                   contain more than one event.
    170           *
    171           * @return  none
    172           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    173          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    174          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
    175            afIncomingMSGPacket_t *MSGpkt;
    176            (void)task_id;  // Intentionally unreferenced parameter
    177          
    178            if ( events & SYS_EVENT_MSG )
   \   000009   EB           MOV     A,R3
   \   00000A   5480         ANL     A,#0x80
   \   00000C   605A         JZ      ??SampleApp_ProcessEvent_0
    179            {
    180              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00000E                ; Setup parameters for call to function osal_msg_receive
   \   00000E   800D         SJMP    ??SampleApp_ProcessEvent_1
    181              while ( MSGpkt )
    182              {
    183                switch ( MSGpkt->hdr.event )
    184                {
    185                  // Received when a key is pressed
    186                  case KEY_CHANGE:
    187                    SampleApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    188                    break;
    189          
    190                  // Received when a messages is received (OTA) for this endpoint
    191                  case AF_INCOMING_MSG_CMD:
    192                    SampleApp_MessageMSGCB( MSGpkt );
    193                    break;
    194          
    195                  // Received whenever the device changes state in the network
    196                  case ZDO_STATE_CHANGE:
    197                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_2:
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   90....       MOV     DPTR,#SampleApp_NwkState
   \   000015   F0           MOVX    @DPTR,A
    198                    if ( (SampleApp_NwkState == DEV_ZB_COORD) ||
    199                           (SampleApp_NwkState == DEV_ROUTER)
    200                         || (SampleApp_NwkState == DEV_END_DEVICE) )
    201                      {
    202                      // Start sending the periodic message in a regular interval.
    203                     
    204                      }
    205                    else
    206                    {
    207                      // Device is no longer in the network
    208                    }
    209                    break;
    210          
    211                  default:
    212                    break;
    213                }
    214          
    215                // Release the memory
    216                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_3:
   \   000016                ; Setup parameters for call to function osal_msg_deallocate
   \   000016   EE           MOV     A,R6
   \   000017   FA           MOV     R2,A
   \   000018   EF           MOV     A,R7
   \   000019   FB           MOV     R3,A
   \   00001A   12....       LCALL   ??osal_msg_deallocate?relay
    217          
    218                // Next - if one is available
    219                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00001D                ; Setup parameters for call to function osal_msg_receive
   \                     ??SampleApp_ProcessEvent_1:
   \   00001D   90....       MOV     DPTR,#SampleApp_TaskID
   \   000020   E0           MOVX    A,@DPTR
   \   000021   F9           MOV     R1,A
   \   000022   12....       LCALL   ??osal_msg_receive?relay
   \   000025   8A..         MOV     ?V0 + 2,R2
   \   000027   8B..         MOV     ?V0 + 3,R3
   \   000029   AE..         MOV     R6,?V0 + 2
   \   00002B   AF..         MOV     R7,?V0 + 3
   \   00002D   EE           MOV     A,R6
   \   00002E   4F           ORL     A,R7
   \   00002F   602E         JZ      ??SampleApp_ProcessEvent_4
   \   000031   8E82         MOV     DPL,R6
   \   000033   8F83         MOV     DPH,R7
   \   000035   E0           MOVX    A,@DPTR
   \   000036   24E6         ADD     A,#-0x1a
   \   000038   601C         JZ      ??SampleApp_ProcessEvent_5
   \   00003A   245A         ADD     A,#0x5a
   \   00003C   6006         JZ      ??SampleApp_ProcessEvent_6
   \   00003E   24EF         ADD     A,#-0x11
   \   000040   60CE         JZ      ??SampleApp_ProcessEvent_2
   \   000042   80D2         SJMP    ??SampleApp_ProcessEvent_3
   \                     ??SampleApp_ProcessEvent_6:
   \   000044                ; Setup parameters for call to function SampleApp_HandleKeys
   \   000044   A3           INC     DPTR
   \   000045   A3           INC     DPTR
   \   000046   A3           INC     DPTR
   \   000047   E0           MOVX    A,@DPTR
   \   000048   FA           MOV     R2,A
   \   000049   8E82         MOV     DPL,R6
   \   00004B   8F83         MOV     DPH,R7
   \   00004D   A3           INC     DPTR
   \   00004E   A3           INC     DPTR
   \   00004F   E0           MOVX    A,@DPTR
   \   000050   F9           MOV     R1,A
   \   000051   12....       LCALL   ??SampleApp_HandleKeys?relay
   \   000054   80C0         SJMP    ??SampleApp_ProcessEvent_3
   \                     ??SampleApp_ProcessEvent_5:
   \   000056                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   000056   EE           MOV     A,R6
   \   000057   FA           MOV     R2,A
   \   000058   EF           MOV     A,R7
   \   000059   FB           MOV     R3,A
   \   00005A   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   00005D   80B7         SJMP    ??SampleApp_ProcessEvent_3
    220              }
    221          
    222              // return unprocessed events
    223              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_4:
   \   00005F   AA..         MOV     R2,?V0 + 0
   \   000061   E5..         MOV     A,?V0 + 1
   \   000063   6480         XRL     A,#0x80
   \   000065   FB           MOV     R3,A
   \   000066   801C         SJMP    ??SampleApp_ProcessEvent_7
    224            }
    225          
    226            if ( events & SAMPLEAPP_SEND_SELF_ADDR )
   \                     ??SampleApp_ProcessEvent_0:
   \   000068   EA           MOV     A,R2
   \   000069   5406         ANL     A,#0x6
   \   00006B   6013         JZ      ??SampleApp_ProcessEvent_8
    227              {
    228                SampleApp_Send_P2P_Message();
   \   00006D                ; Setup parameters for call to function SampleApp_Send_P2P_Message
   \   00006D   12....       LCALL   ??SampleApp_Send_P2P_Message?relay
    229                 osal_start_timerEx( SampleApp_TaskID,
    230                                        SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    231                                        SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT );
   \   000070                ; Setup parameters for call to function osal_start_timerEx
   \   000070   7CB8         MOV     R4,#-0x48
   \   000072   7D0B         MOV     R5,#0xb
   \   000074   7A01         MOV     R2,#0x1
   \   000076   7B00         MOV     R3,#0x0
   \   000078   90....       MOV     DPTR,#SampleApp_TaskID
   \   00007B   E0           MOVX    A,@DPTR
   \   00007C   F9           MOV     R1,A
   \   00007D   12....       LCALL   ??osal_start_timerEx?relay
    232              }
    233            return 0;
   \                     ??SampleApp_ProcessEvent_8:
   \   000080   7A00         MOV     R2,#0x0
   \   000082   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_7:
   \   000084   7F04         MOV     R7,#0x4
   \   000086   02....       LJMP    ?BANKED_LEAVE_XDATA
    234          }
    235          
    236          /*********************************************************************
    237           * Event Generation Functions
    238           */
    239          /*********************************************************************
    240           * @fn      SampleApp_HandleKeys
    241           *
    242           * @brief   Handles all key events for this device.
    243           *
    244           * @param   shift - true if in shift/alt.
    245           * @param   keys - bit field for key events. Valid entries:
    246           *                 HAL_KEY_SW_2
    247           *                 HAL_KEY_SW_1
    248           *
    249           * @return  none
    250           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    251          void SampleApp_HandleKeys( uint8 shift, uint8 keys )
   \                     SampleApp_HandleKeys:
    252          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
    253            char data='0';
    254            (void)shift;  // Intentionally unreferenced parameter
    255            
    256            if ( keys & HAL_KEY_SW_1 )
   \   000006   A2E0         MOV     C,0xE0 /* A   */.0
   \   000008   5040         JNC     ??SampleApp_HandleKeys_0
    257            {
    258              if ( AF_DataRequest( &SampleApp_P2P_DstAddr, &SampleApp_epDesc,
    259                                 GET_ENDDEVIC_ADDRES,
    260                                 1,
    261                                 (uint8*)data,
    262                                 &SampleApp_TransID,
    263                                 AF_DISCV_ROUTE,
    264                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   00000A                ; Setup parameters for call to function AF_DataRequest
   \   00000A   75..1E       MOV     ?V0 + 0,#0x1e
   \   00000D   78..         MOV     R0,#?V0 + 0
   \   00000F   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000012   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   000015   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000018   78..         MOV     R0,#?V0 + 0
   \   00001A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00001D   75..30       MOV     ?V0 + 0,#0x30
   \   000020   75..00       MOV     ?V0 + 1,#0x0
   \   000023   78..         MOV     R0,#?V0 + 0
   \   000025   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000028   75..01       MOV     ?V0 + 0,#0x1
   \   00002B   78..         MOV     R0,#?V0 + 0
   \   00002D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000030   75..05       MOV     ?V0 + 0,#0x5
   \   000033   78..         MOV     R0,#?V0 + 0
   \   000035   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000038   7920         MOV     R1,#0x20
   \   00003A   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   00003C   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   00003E   7A..         MOV     R2,#SampleApp_P2P_DstAddr & 0xff
   \   000040   7B..         MOV     R3,#(SampleApp_P2P_DstAddr >> 8) & 0xff
   \   000042   12....       LCALL   ??AF_DataRequest?relay
   \   000045   7409         MOV     A,#0x9
   \   000047   12....       LCALL   ?DEALLOC_XSTACK8
    265                  {
    266                  }
    267                  else
    268                  {
    269                    // Error occurred in request to send.
    270                  }
    271          
    272            }
    273          }
   \                     ??SampleApp_HandleKeys_0:
   \   00004A                REQUIRE ?Subroutine0
   \   00004A                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    274          
    275          /*********************************************************************
    276           * LOCAL FUNCTIONS
    277           */
    278          
    279          /*********************************************************************
    280           * @fn      SampleApp_MessageMSGCB
    281           *
    282           * @brief   Data message processor callback.  This function processes
    283           *          any incoming data - probably from other devices.  So, based
    284           *          on cluster ID, perform the intended action.
    285           *
    286           * @param   none
    287           *
    288           * @return  none
    289           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    290          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    291          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    292            uint16 Addr;
    293            switch ( pkt->clusterId )
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   6405         XRL     A,#0x5
   \   00000F   7002         JNZ     ??SampleApp_MessageMSGCB_0
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \                     ??SampleApp_MessageMSGCB_0:
   \   000013   7030         JNZ     ??SampleApp_MessageMSGCB_1
    294            {
    295              
    296              case GET_ENDDEVIC_ADDRES:
    297                Addr=BUILD_UINT16(pkt->cmd.Data[1], pkt->cmd.Data[0]);
    298                SampleApp_P2P_DstAddr.addr.shortAddr = Addr; 
   \   000015   EA           MOV     A,R2
   \   000016   2421         ADD     A,#0x21
   \   000018   F582         MOV     DPL,A
   \   00001A   EB           MOV     A,R3
   \   00001B   3400         ADDC    A,#0x0
   \   00001D   F583         MOV     DPH,A
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   F8           MOV     R0,A
   \   000021   A3           INC     DPTR
   \   000022   E0           MOVX    A,@DPTR
   \   000023   F9           MOV     R1,A
   \   000024   8882         MOV     DPL,R0
   \   000026   8983         MOV     DPH,R1
   \   000028   A3           INC     DPTR
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   FA           MOV     R2,A
   \   00002B   8882         MOV     DPL,R0
   \   00002D   8983         MOV     DPH,R1
   \   00002F   E0           MOVX    A,@DPTR
   \   000030   F9           MOV     R1,A
   \   000031   EA           MOV     A,R2
   \   000032   90....       MOV     DPTR,#SampleApp_P2P_DstAddr
   \   000035   F0           MOVX    @DPTR,A
   \   000036   A3           INC     DPTR
   \   000037   E9           MOV     A,R1
   \   000038   F0           MOVX    @DPTR,A
    299                osal_set_event( SampleApp_TaskID, SAMPLEAPP_SEND_SELF_ADDR);
   \   000039                ; Setup parameters for call to function osal_set_event
   \   000039   7A06         MOV     R2,#0x6
   \   00003B   7B00         MOV     R3,#0x0
   \   00003D   90....       MOV     DPTR,#SampleApp_TaskID
   \   000040   E0           MOVX    A,@DPTR
   \   000041   F9           MOV     R1,A
   \   000042   12....       LCALL   ??osal_set_event?relay
    300                break;      
    301            }
    302          }
   \                     ??SampleApp_MessageMSGCB_1:
   \   000045   D083         POP     DPH
   \   000047   D082         POP     DPL
   \   000049   02....       LJMP    ?BRET
    303          
    304          /*********************************************************************
    305           * @fn      SampleApp_Send_P2P_Message
    306           *
    307           * @brief   point to point.
    308           *
    309           * @param   none
    310           *
    311           * @return  none
    312           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    313          void SampleApp_Send_P2P_Message( void )
   \                     SampleApp_Send_P2P_Message:
    314          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 10
   \   000005   74F6         MOV     A,#-0xa
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    315            char data[10]="0123456789";
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   AC82         MOV     R4,DPL
   \   000012   AD83         MOV     R5,DPH
   \   000014   7583..       MOV     DPH,#(`?<Constant "0123456789">` >> 8) & 0xff
   \   000017   7582..       MOV     DPL,#`?<Constant "0123456789">` & 0xff
   \   00001A   740A         MOV     A,#0xa
   \   00001C   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    316            
    317            if ( AF_DataRequest( &SampleApp_P2P_DstAddr, &SampleApp_epDesc,
    318                                 SAMPLEAPP_P2P_CLUSTERID,
    319                                 10,
    320                                 (uint8*)data,
    321                                 &SampleApp_TransID,
    322                                 AF_DISCV_ROUTE,
    323                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   00001F                ; Setup parameters for call to function AF_DataRequest
   \   00001F   75..1E       MOV     ?V0 + 0,#0x1e
   \   000022   78..         MOV     R0,#?V0 + 0
   \   000024   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000027   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   00002A   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   00002D   78..         MOV     R0,#?V0 + 0
   \   00002F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000032   7403         MOV     A,#0x3
   \   000034   12....       LCALL   ?XSTACK_DISP0_8
   \   000037   8582..       MOV     ?V0 + 0,DPL
   \   00003A   8583..       MOV     ?V0 + 1,DPH
   \   00003D   78..         MOV     R0,#?V0 + 0
   \   00003F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000042   75..0A       MOV     ?V0 + 0,#0xa
   \   000045   75..00       MOV     ?V0 + 1,#0x0
   \   000048   78..         MOV     R0,#?V0 + 0
   \   00004A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004D   75..04       MOV     ?V0 + 0,#0x4
   \   000050   78..         MOV     R0,#?V0 + 0
   \   000052   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000055   7920         MOV     R1,#0x20
   \   000057   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   000059   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   00005B   7A..         MOV     R2,#SampleApp_P2P_DstAddr & 0xff
   \   00005D   7B..         MOV     R3,#(SampleApp_P2P_DstAddr >> 8) & 0xff
   \   00005F   12....       LCALL   ??AF_DataRequest?relay
   \   000062   7409         MOV     A,#0x9
   \   000064   12....       LCALL   ?DEALLOC_XSTACK8
    324            {
    325            }
    326            else
    327            {
    328              // Error occurred in request to send.
    329            }
    330          }
   \   000067   740A         MOV     A,#0xa
   \   000069   12....       LCALL   ?DEALLOC_XSTACK8
   \   00006C   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Send_P2P_Message?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Send_P2P_Message

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "0123456789">`:
   \   000000   30313233     DB 30H, 31H, 32H, 33H, 34H, 35H, 36H, 37H
   \            34353637
   \   000008   3839         DB 38H, 39H
    331          
    332          
    333          /*********************************************************************
    334          *********************************************************************/
    335          
    336          

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     SampleApp_HandleKeys               0      0     31
       -> AF_DataRequest                0      0     38
     SampleApp_Init                     0      0      9
       -> MT_UartInit                   0      0     18
       -> MT_UartRegisterTaskID         0      0     18
       -> afRegister                    0      0     18
       -> RegisterForKeys               0      0     18
     SampleApp_MessageMSGCB             2      0     12
       -> osal_set_event                4      0      0
     SampleApp_ProcessEvent             0      0     12
       -> osal_msg_receive              0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> SampleApp_HandleKeys          0      0     24
       -> SampleApp_MessageMSGCB        0      0     24
       -> SampleApp_Send_P2P_Message
                                        0      0     24
       -> osal_start_timerEx            0      0     24
     SampleApp_Send_P2P_Message         2      0     41
       -> AF_DataRequest                0      0     58


   Segment part sizes:

     Function/Label                     Bytes
     --------------                     -----
     CMD                                   1
     SampleApp_ClusterList                 4
     SampleApp_SimpleDesc                 12
     SampleApp_epDesc                      6
     SampleApp_TaskID                      1
     SampleApp_NwkState                    1
     SampleApp_TransID                     1
     SampleApp_P2P_DstAddr                12
     SampleApp_Init                       83
     SampleApp_ProcessEvent              137
     SampleApp_HandleKeys                 74
     ?Subroutine0                          5
     SampleApp_MessageMSGCB               76
     SampleApp_Send_P2P_Message          111
     ??SampleApp_Init?relay                6
     ??SampleApp_ProcessEvent?relay        6
     ??SampleApp_HandleKeys?relay          6
     ??SampleApp_MessageMSGCB?relay        6
     ??SampleApp_Send_P2P_Message?relay    6
     ?<Constant "0123456789">             10

 
 486 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
  26 bytes in segment XDATA_ROM_C
  22 bytes in segment XDATA_Z
 
 516 bytes of CODE  memory
  26 bytes of CONST memory
  22 bytes of XDATA memory

Errors: none
Warnings: none
