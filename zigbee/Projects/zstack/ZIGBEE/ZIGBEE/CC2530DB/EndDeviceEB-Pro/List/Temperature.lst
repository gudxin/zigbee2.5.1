###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         21/Oct/2018  10:07:05 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\Source\Temperat #
#                          ure.c                                              #
#    Command line       =  -f C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн #
#                          ╩╩З╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\ #
#                          ..\..\Tools\CC2530DB\f8wEndev.cfg (-DCPU32MHZ      #
#                          -DROOT=__near_func -DBLINK_LEDS) -f                #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\Tools\CC2530DB\f8wConfig.cfg (-DSECURE=0        #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\Source\Temperat #
#                          ure.c -D ZIGBEEPRO -D NWK_AUTO_POLL -D ZTOOL_P1    #
#                          -D xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D     #
#                          LCD_SUPPORTED=DEBUG -lC C:\Users\23265\Desktop\вюц #
#                          Фнд╪Ч\т╢бК\обн╩╩З\обн╩╩З╧╓Ёл\Projects\zstack\ZIGBE #
#                          E\ZIGBEE\CC2530DB\EndDeviceEB-Pro\List\ -lA        #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\EndDev #
#                          iceEB-Pro\List\ --diag_suppress Pe001,Pa010 -o     #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\EndDev #
#                          iceEB-Pro\Obj\ -e --debug --core=plain             #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I C:\Users\23265\Desktop\вюц #
#                          Фнд╪Ч\т╢бК\обн╩╩З\обн╩╩З╧╓Ёл\Projects\zstack\ZIGBE #
#                          E\ZIGBEE\CC2530DB\ -I C:\Users\23265\Desktop\вюцФн #
#                          д╪Ч\т╢бК\обн╩╩З\обн╩╩З╧╓Ёл\Projects\zstack\ZIGBEE\ #
#                          ZIGBEE\CC2530DB\..\SOURCE\ -I                      #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\ZMAIN\TI2530DB\ -I C:\Users\23265\Desktop\вюцФн #
#                          д╪Ч\т╢бК\обн╩╩З\обн╩╩З╧╓Ёл\Projects\zstack\ZIGBEE\ #
#                          ZIGBEE\CC2530DB\..\..\..\..\..\COMPONENTS\MT\ -I   #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\HAL\INCLUDE\ -I                #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\ -I        #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\OSAL\MCU\CCSOC\ -I             #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\OSAL\INCLUDE\ -I               #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\STACK\AF\ -I                   #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\STACK\NWK\ -I                  #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\STACK\SEC\ -I                  #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\STACK\SAPI\ -I                 #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\STACK\SYS\ -I                  #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\STACK\ZDO\ -I                  #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\ZMAC\F8W\ -I                   #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\ZMAC\ -I                       #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\SERVICES\SADDR\ -I             #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\SERVICES\SDATA\ -I             #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\MAC\INCLUDE\ -I                #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I             #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\ -I        #
#                          C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\..\..\ #
#                          ..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHI #
#                          P\ -Ohz --require_prototypes                       #
#    List file          =  C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\EndDev #
#                          iceEB-Pro\List\Temperature.lst                     #
#    Object file        =  C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З #
#                          ╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\CC2530DB\EndDev #
#                          iceEB-Pro\Obj\Temperature.r51                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\23265\Desktop\вюцФнд╪Ч\т╢бК\обн╩╩З\обн╩╩З╧╓Ёл\Projects\zstack\ZIGBEE\ZIGBEE\Source\Temperature.c
      1          /**************************************************************************************************
      2            Filename:       SampleApp.c
      3            Revised:        $Date: 2009-03-18 15:56:27 -0700 (Wed, 18 Mar 2009) $
      4            Revision:       $Revision: 19453 $
      5          
      6            Description:    Sample Application (no Profile).
      7          
      8          **************************************************************************************************/
      9          
     10          #include "OSAL.h"
     11          #include "ZGlobals.h"
     12          #include "AF.h"
     13          #include "aps_groups.h"
     14          #include "ZDApp.h"
     15          #include <string.h>
     16          #include <stdio.h>
     17          #include "SampleApp.h"
     18          #include "SampleAppHw.h"
     19          
     20          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x88
   \   union <unnamed> volatile __sfr _A_TCON
   \                     _A_TCON:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xb4
   \   unsigned char volatile __sfr ADCCON1
   \                     ADCCON1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xb6
   \   unsigned char volatile __sfr ADCCON3
   \                     ADCCON3:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xba
   \   unsigned char volatile __sfr ADCL
   \                     ADCL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xbb
   \   unsigned char volatile __sfr ADCH
   \                     ADCH:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
     21          
     22          /* HAL */
     23          #include "hal_lcd.h"
     24          #include "hal_led.h"
     25          #include "hal_key.h"
     26          #include "MT_UART.h"
     27          #include "MT_APP.h"
     28          #include "MT.h"
     29          #include "math.h"
     30          
     31          
     32          #define DATA_PIN P0_4            //╤╗рЕP0.4©зн╙╪л╣ГфВ╣д©ьжф╤к
     33          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     34          const cId_t SampleApp_ClusterList[ENDDEVICE_MAX_CLUSTERS] =
   \                     SampleApp_ClusterList:
   \   000000   0100         DW 1
     35          {
     36            ENDDEVIC1_MSG //Modified by user,гЬ╥жц©╦Жжу╤к╣д╢ьап╠Мё╛╣зx╦Жжу╤кё╛тР╦Э╦дн╙ENDDEVICx_MSG
     37          }; 

   \                                 In  segment XDATA_ROM_C, align 1
     38          const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   01           DB 1
   \   000007   ....         DW SampleApp_ClusterList
   \   000009   01           DB 1
   \   00000A   ....         DW SampleApp_ClusterList
     39          {
     40            SAMPLEAPP_ENDPOINT,             
     41            SAMPLEAPP_PROFID,              
     42            SAMPLEAPP_DEVICEID,             
     43            SAMPLEAPP_FLAGS,                
     44            SAMPLEAPP_DEVICE_VERSION,       
     45            ENDDEVICE_MAX_CLUSTERS,          
     46            (cId_t *)SampleApp_ClusterList,  
     47            ENDDEVICE_MAX_CLUSTERS,         
     48            (cId_t *)SampleApp_ClusterList   
     49          };
     50          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     51          endPointDesc_t SampleApp_epDesc;
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     52          
     53          
     54          /*********************************************************************
     55           * LOCAL VARIABLES
     56           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     57          uint8 SampleApp_TaskID;  
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     58                                    

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     59          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     60          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     61          uint8 SampleApp_TransID;  
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     62          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     63          afAddrType_t SampleApp_P2P_DstAddr;      //╣Ц╡╔╣ьж╥ё╛╪╢жу╤коРп╜╣ВфВ╥╒кмйЩ╬щ╣ьж╥
   \                     SampleApp_P2P_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     64          uint8 ok;
   \                     ok:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     65          float  ADC;
   \                     ADC:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     66          uint8 temperature;
   \                     temperature:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     67          uint8 str_t[4];
   \                     str_t:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     68          unsigned short  NUM;
   \                     NUM:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
     69          /*********************************************************************
     70           * LOCAL FUNCTIONS
     71           */
     72          void spi_master(void);
     73          uint8 SampleApp_Send_PERIDOIC_CMD(void);     //╤╗й╠╢╝©з╥╒км╨╞йЩ
     74          void ADCinital(void);
     75          int get_temperature_Message(void);
     76          void delayMS(unsigned int ms);
     77          /*********************************************************************
     78           * @fn      SampleApp_Init
     79           *
     80           * @brief   Initialization function for the Generic App Task.
     81           *          This is called during initialization and should contain
     82           *          any application specific initialization (ie. hardware
     83           *          initialization/setup, table initialization, power up
     84           *          notificaiton ... ).
     85           *
     86           * @param   task_id - the ID assigned by OSAL.  This ID should be
     87           *                    used to send messages and set timers.
     88           *
     89           * @return  none
     90           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     91          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
     92          { 
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
     93            SampleApp_TaskID = task_id;
   \   000006   90....       MOV     DPTR,#SampleApp_TaskID
   \   000009   F0           MOVX    @DPTR,A
     94            SampleApp_NwkState = DEV_INIT;
   \   00000A   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000D   7401         MOV     A,#0x1
   \   00000F   F0           MOVX    @DPTR,A
     95            SampleApp_TransID = 0;
   \   000010   90....       MOV     DPTR,#SampleApp_TransID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
     96           
     97            ADCinital();
   \   000015                ; Setup parameters for call to function ADCinital
   \   000015   12....       LCALL   ??ADCinital?relay
     98            osal_start_timerEx( SampleApp_TaskID, PERIDOIC_CMD, PERIODIC_CMD_TIME );
   \   000018                ; Setup parameters for call to function osal_start_timerEx
   \   000018   7CD0         MOV     R4,#-0x30
   \   00001A   7D07         MOV     R5,#0x7
   \   00001C   7A01         MOV     R2,#0x1
   \   00001E   7B00         MOV     R3,#0x0
   \   000020   90....       MOV     DPTR,#SampleApp_TaskID
   \   000023   E0           MOVX    A,@DPTR
   \   000024   F9           MOV     R1,A
   \   000025   12....       LCALL   ??osal_start_timerEx?relay
     99            
    100             P0SEL &= ~0x10;               //иХжцP0.4©зн╙фум╗IO
   \   000028   53F3EF       ANL     0xf3,#0xef
    101            P0DIR |= 0x10;                //иХжцP0.4©зн╙йДЁЖ,©ьжф╪л╣ГфВ
   \   00002B   43FD10       ORL     0xfd,#0x10
    102            
    103            SampleApp_P2P_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //╣Ц╡╔╣ьж╥ЁУй╪╩╞
   \   00002E   90....       MOV     DPTR,#SampleApp_P2P_DstAddr + 8
   \   000031   7402         MOV     A,#0x2
   \   000033   F0           MOVX    @DPTR,A
    104            SampleApp_P2P_DstAddr.endPoint = SAMPLEAPP_ENDPOINT; 
   \   000034   A3           INC     DPTR
   \   000035   7414         MOV     A,#0x14
   \   000037   F0           MOVX    @DPTR,A
    105            SampleApp_P2P_DstAddr.addr.shortAddr = 0x0000;            //╥╒╦Ьп╜╣ВфВё╛п╜╣ВфВ╣ьж╥╧л╤╗н╙0X0000ё╛рР╢кнчпХ╦д╤╞
   \   000038   90....       MOV     DPTR,#SampleApp_P2P_DstAddr
   \   00003B   E4           CLR     A
   \   00003C   F0           MOVX    @DPTR,A
   \   00003D   A3           INC     DPTR
   \   00003E   F0           MOVX    @DPTR,A
    106          
    107          
    108            SampleApp_epDesc.endPoint = SAMPLEAPP_ENDPOINT;
   \   00003F   90....       MOV     DPTR,#SampleApp_epDesc
   \   000042   7414         MOV     A,#0x14
   \   000044   F0           MOVX    @DPTR,A
    109            SampleApp_epDesc.task_id = &SampleApp_TaskID;
   \   000045   A3           INC     DPTR
   \   000046   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   000048   F0           MOVX    @DPTR,A
   \   000049   A3           INC     DPTR
   \   00004A   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   00004C   F0           MOVX    @DPTR,A
    110            SampleApp_epDesc.simpleDesc
    111                      = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
   \   00004D   A3           INC     DPTR
   \   00004E   74..         MOV     A,#SampleApp_SimpleDesc & 0xff
   \   000050   F0           MOVX    @DPTR,A
   \   000051   A3           INC     DPTR
   \   000052   74..         MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
   \   000054   F0           MOVX    @DPTR,A
    112            SampleApp_epDesc.latencyReq = noLatencyReqs;
   \   000055   A3           INC     DPTR
   \   000056   E4           CLR     A
   \   000057   F0           MOVX    @DPTR,A
    113           
    114            afRegister( &SampleApp_epDesc );
   \   000058                ; Setup parameters for call to function afRegister
   \   000058   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   00005A   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   00005C   12....       LCALL   ??afRegister?relay
    115           
    116            RegisterForKeys( SampleApp_TaskID );
   \   00005F                ; Setup parameters for call to function RegisterForKeys
   \   00005F   90....       MOV     DPTR,#SampleApp_TaskID
   \   000062   E0           MOVX    A,@DPTR
   \   000063   F9           MOV     R1,A
   \   000064   12....       LCALL   ??RegisterForKeys?relay
    117          
    118            
    119          }
   \   000067                REQUIRE ?Subroutine0
   \   000067                REQUIRE P0SEL
   \   000067                REQUIRE P0DIR
   \   000067                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    120          
    121          /*********************************************************************
    122           * @fn      SampleApp_ProcessEvent
    123           *
    124           * @brief   Generic Application Task event processor.  This function
    125           *          is called to process all events for the task.  Events
    126           *          include timers, messages and any other user defined events.
    127           *
    128           * @param   task_id  - The OSAL assigned task ID.
    129           * @param   events - events to process.  This is a bit map and can
    130           *                   contain more than one event.
    131           *
    132           * @return  none  osal_start_timerEx( SampleApp_TaskID, PERIDOIC_CMD, PERIODIC_CMD_TIME );
    133           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    134          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    135          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    136            afIncomingMSGPacket_t *MSGpkt;
    137            (void)task_id;  // Intentionally unreferenced parameter
    138          
    139            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   6028         JZ      ??SampleApp_ProcessEvent_0
    140            {
    141              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00000D                ; Setup parameters for call to function osal_msg_receive
   \   00000D   8012         SJMP    ??SampleApp_ProcessEvent_1
    142              while ( MSGpkt )
    143              {
    144                switch ( MSGpkt->hdr.event )
   \                     ??SampleApp_ProcessEvent_2:
   \   00000F   8A82         MOV     DPL,R2
   \   000011   8B83         MOV     DPH,R3
   \   000013   E0           MOVX    A,@DPTR
   \   000014   64D1         XRL     A,#0xd1
   \   000016   7006         JNZ     ??SampleApp_ProcessEvent_3
    145                {
    146                  // Received when a key is pressed
    147                  case KEY_CHANGE:
    148                   
    149                    break;
    150          
    151                  // Received when a messages is received (OTA) for this endpoint
    152                  case AF_INCOMING_MSG_CMD:
    153                    
    154                    break;
    155          
    156                  // Received whenever the device changes state in the network
    157                  case ZDO_STATE_CHANGE:
    158                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \   000018   A3           INC     DPTR
   \   000019   E0           MOVX    A,@DPTR
   \   00001A   90....       MOV     DPTR,#SampleApp_NwkState
   \   00001D   F0           MOVX    @DPTR,A
    159                    if ( 1 )
    160                    {
    161                     //ж╩спжу╤киХ╠╦©╙фТё╛2цКнб╤х╩╩кЦхннЯ
    162                    // osal_start_timerEx( SampleApp_TaskID, PERIDOIC_CMD, PERIODIC_CMD_TIME );
    163                    }
    164                  
    165                    break;
    166          
    167                  default:
    168                    break;
    169                }
    170          
    171                // Release the memory
    172                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_3:
   \   00001E                ; Setup parameters for call to function osal_msg_deallocate
   \   00001E   12....       LCALL   ??osal_msg_deallocate?relay
    173          
    174                // Next - if one is available
    175                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   000021                ; Setup parameters for call to function osal_msg_receive
   \                     ??SampleApp_ProcessEvent_1:
   \   000021   90....       MOV     DPTR,#SampleApp_TaskID
   \   000024   E0           MOVX    A,@DPTR
   \   000025   F9           MOV     R1,A
   \   000026   12....       LCALL   ??osal_msg_receive?relay
    176              }
   \   000029   EA           MOV     A,R2
   \   00002A   4B           ORL     A,R3
   \   00002B   70E2         JNZ     ??SampleApp_ProcessEvent_2
    177          
    178              // return unprocessed events
    179              return (events ^ SYS_EVENT_MSG);
   \   00002D   EE           MOV     A,R6
   \   00002E   FA           MOV     R2,A
   \   00002F   EF           MOV     A,R7
   \   000030   6480         XRL     A,#0x80
   \   000032   FB           MOV     R3,A
   \   000033   801C         SJMP    ??SampleApp_ProcessEvent_4
    180            }
    181          
    182            if ( events & PERIDOIC_CMD )//2S╤╗й╠й╠╪Д╣╫ё╛╣Всц╨╞йЩSampleApp_Send_PERIDOIC_CMD╪фкЦнб╤хж╣
   \                     ??SampleApp_ProcessEvent_0:
   \   000035   EE           MOV     A,R6
   \   000036   A2E0         MOV     C,0xE0 /* A   */.0
   \   000038   5013         JNC     ??SampleApp_ProcessEvent_5
    183              {
    184                SampleApp_Send_PERIDOIC_CMD();
   \   00003A                ; Setup parameters for call to function SampleApp_Send_PERIDOIC_CMD
   \   00003A   12....       LCALL   ??SampleApp_Send_PERIDOIC_CMD?relay
    185                osal_start_timerEx( SampleApp_TaskID, PERIDOIC_CMD, PERIODIC_CMD_TIME );
   \   00003D                ; Setup parameters for call to function osal_start_timerEx
   \   00003D   7CD0         MOV     R4,#-0x30
   \   00003F   7D07         MOV     R5,#0x7
   \   000041   7A01         MOV     R2,#0x1
   \   000043   7B00         MOV     R3,#0x0
   \   000045   90....       MOV     DPTR,#SampleApp_TaskID
   \   000048   E0           MOVX    A,@DPTR
   \   000049   F9           MOV     R1,A
   \   00004A   12....       LCALL   ??osal_start_timerEx?relay
    186             //фТ╤╞╤╗й╠йб╪Чё╛жэфзн╙PERIODIC_CMD_TIME
    187              }
    188            return 0;
   \                     ??SampleApp_ProcessEvent_5:
   \   00004D   7A00         MOV     R2,#0x0
   \   00004F   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_4:
   \   000051                REQUIRE ?Subroutine1
   \   000051                ; // Fall through to label ?Subroutine1
    189          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    190          
    191           
    192          /*********************************************************************
    193          *********************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    194          uint8 SampleApp_Send_PERIDOIC_CMD(void)//╪фкЦнб╤хж╣
   \                     SampleApp_Send_PERIDOIC_CMD:
    195          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    196            if(1)            
    197              {                                   
    198                       get_temperature_Message();
   \   000005                ; Setup parameters for call to function get_temperature_Message
   \   000005   12....       LCALL   ??get_temperature_Message?relay
    199                       str_t[0] = '1' ;//жу╤к1нб╤х╠Ю╨е
   \   000008   90....       MOV     DPTR,#str_t
   \   00000B   7431         MOV     A,#0x31
   \   00000D   F0           MOVX    @DPTR,A
    200                       str_t[1] = (uint8)temperature;   
   \   00000E   90....       MOV     DPTR,#temperature
   \   000011   E0           MOVX    A,@DPTR
   \   000012   90....       MOV     DPTR,#str_t + 1
   \   000015   F0           MOVX    @DPTR,A
    201                       if(temperature >= 35)
   \   000016   C3           CLR     C
   \   000017   9423         SUBB    A,#0x23
   \   000019   90....       MOV     DPTR,#str_t + 2
   \   00001C   4007         JC      ??SampleApp_Send_PERIDOIC_CMD_0
    202                       {
    203                         str_t[2] = 1;
   \   00001E   7401         MOV     A,#0x1
   \   000020   F0           MOVX    @DPTR,A
    204                         DATA_PIN = 0;        //╪л╣ГфВнЭ╨о
   \   000021   C284         CLR     0x80.4
   \   000023   800D         SJMP    ??SampleApp_Send_PERIDOIC_CMD_1
    205                       } 
    206                       else 
    207                       {
    208                         str_t[2] = 0;
   \                     ??SampleApp_Send_PERIDOIC_CMD_0:
   \   000025   E4           CLR     A
   \   000026   F0           MOVX    @DPTR,A
    209                         if (temperature <= 25)
   \   000027   90....       MOV     DPTR,#temperature
   \   00002A   E0           MOVX    A,@DPTR
   \   00002B   C3           CLR     C
   \   00002C   941A         SUBB    A,#0x1a
   \   00002E   5002         JNC     ??SampleApp_Send_PERIDOIC_CMD_1
    210                         {
    211                           DATA_PIN = 1;        //╪л╣ГфВ╤о©╙
   \   000030   D284         SETB    0x80.4
    212                         }
    213                       }
    214          
    215                       //sprintf(&str_t[2], "%3.2f", RTD_Temperature);//╫╚нб╤х╦║╣ЦйЩв╙╩╞н╙╤тс╕вж╥Ш╢╝
    216                       
    217                       AF_DataRequest( &SampleApp_P2P_DstAddr, &SampleApp_epDesc,//нчоъ╥╒кмпео╒╣╫п╜╣ВфВ
    218                                           ENDDEVIC1_MSG, 
    219                                           3,            //╥╒кмйЩ╬щЁ╓╤х,╦Ы╬щсц╩╖йЩ╬щЁ╓╤х╦д╠Д
    220                                           str_t,
    221                                           &SampleApp_TransID,
    222                                           AF_DISCV_ROUTE,AF_DEFAULT_RADIUS);
   \                     ??SampleApp_Send_PERIDOIC_CMD_1:
   \   000032                ; Setup parameters for call to function AF_DataRequest
   \   000032   75..1E       MOV     ?V0 + 0,#0x1e
   \   000035   78..         MOV     R0,#?V0 + 0
   \   000037   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00003A   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   00003D   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000040   78..         MOV     R0,#?V0 + 0
   \   000042   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000045   75....       MOV     ?V0 + 0,#str_t & 0xff
   \   000048   75....       MOV     ?V0 + 1,#(str_t >> 8) & 0xff
   \   00004B   78..         MOV     R0,#?V0 + 0
   \   00004D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000050   75..03       MOV     ?V0 + 0,#0x3
   \   000053   75..00       MOV     ?V0 + 1,#0x0
   \   000056   78..         MOV     R0,#?V0 + 0
   \   000058   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005B   75..01       MOV     ?V0 + 0,#0x1
   \   00005E   78..         MOV     R0,#?V0 + 0
   \   000060   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000063   7920         MOV     R1,#0x20
   \   000065   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   000067   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   000069   7A..         MOV     R2,#SampleApp_P2P_DstAddr & 0xff
   \   00006B   7B..         MOV     R3,#(SampleApp_P2P_DstAddr >> 8) & 0xff
   \   00006D   12....       LCALL   ??AF_DataRequest?relay
   \   000070   7409         MOV     A,#0x9
   \   000072   12....       LCALL   ?DEALLOC_XSTACK8
    223           
    224              }
    225             return 0;  
   \   000075   7900         MOV     R1,#0x0
   \   000077   80..         SJMP    ?Subroutine1
   \   000079                REQUIRE _A_P0
    226          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    227          void ADCinital(void)
   \                     ADCinital:
    228          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    229            ADCH&=0X00;//гЕEOC╠Йж╬
   \   000000   E5BB         MOV     A,0xbb
   \   000002   75BB00       MOV     0xbb,#0x0
    230            P0DIR &= ~0x40;
   \   000005   53FDBF       ANL     0xfd,#0xbf
    231            //╫╚ P1.1 ╤╗рЕн╙мБиХ╧╕дэ
    232            P0SEL |= 0x40;
   \   000008   43F340       ORL     0xf3,#0x40
    233            ADCCON3=0XB6;//╣╔╢нв╙╩╩ё╛╡н©╪╣Гя╧н╙╣Гт╢╣Гя╧ё╛╤тP0.6╡ияЫё╛╬╚╤х12н╩            
   \   00000B   75B6B6       MOV     0xb6,#-0x4a
    234            ADCCON1=0X30;//мёж╧AD
   \   00000E   75B430       MOV     0xb4,#0x30
    235            ADCCON1|=0X40;//©╙й╪AD
   \   000011   43B440       ORL     0xb4,#0x40
    236          }
   \   000014   02....       LJMP    ?BRET
   \   000017                REQUIRE ADCH
   \   000017                REQUIRE P0DIR
   \   000017                REQUIRE P0SEL
   \   000017                REQUIRE ADCCON3
   \   000017                REQUIRE ADCCON1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    237          int get_temperature_Message()
   \                     get_temperature_Message:
    238          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
    239           
    240            
    241            
    242             while ( !ADCIF ) ;
   \                     ??get_temperature_Message_0:
   \   000005   A28D         MOV     C,0x88.5
   \   000007   50FC         JNC     ??get_temperature_Message_0
    243                  
    244             NUM = ADCL;
   \   000009   E5BA         MOV     A,0xba
   \   00000B   F5..         MOV     ?V0 + 0,A
    245             NUM |= ((uint16)ADCH) << 8 ;//уБюОв╒рБр╩об
    246             NUM >>= 4;
   \   00000D   E5BB         MOV     A,0xbb
   \   00000F   F5..         MOV     ?V0 + 1,A
   \   000011   7404         MOV     A,#0x4
   \   000013   78..         MOV     R0,#?V0 + 0
   \   000015   12....       LCALL   ?US_SHR
   \   000018   90....       MOV     DPTR,#NUM
   \   00001B   E5..         MOV     A,?V0 + 0
   \   00001D   F0           MOVX    @DPTR,A
   \   00001E   A3           INC     DPTR
   \   00001F   E5..         MOV     A,?V0 + 1
   \   000021   F0           MOVX    @DPTR,A
    247            
    248            ADCinital();
   \   000022                ; Setup parameters for call to function ADCinital
   \   000022   12....       LCALL   ??ADCinital?relay
    249            if (NUM&0x8000) NUM=0;
    250            if (NUM>4000) NUM=0;
   \   000025   90....       MOV     DPTR,#NUM
   \   000028   C3           CLR     C
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   94A1         SUBB    A,#-0x5f
   \   00002C   A3           INC     DPTR
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   940F         SUBB    A,#0xf
   \   000030   4007         JC      ??get_temperature_Message_1
   \   000032   90....       MOV     DPTR,#NUM
   \   000035   E4           CLR     A
   \   000036   F0           MOVX    @DPTR,A
   \   000037   A3           INC     DPTR
   \   000038   F0           MOVX    @DPTR,A
    251            ADC=(float)((float)NUM*3.30/2048);  
   \                     ??get_temperature_Message_1:
   \   000039   90....       MOV     DPTR,#NUM
   \   00003C   E0           MOVX    A,@DPTR
   \   00003D   F5..         MOV     ?V0 + 0,A
   \   00003F   A3           INC     DPTR
   \   000040   E0           MOVX    A,@DPTR
   \   000041   F5..         MOV     ?V0 + 1,A
   \   000043   E4           CLR     A
   \   000044   F5..         MOV     ?V0 + 2,A
   \   000046   F5..         MOV     ?V0 + 3,A
   \   000048   78..         MOV     R0,#?V0 + 0
   \   00004A   12....       LCALL   ?UL_TO_FLT
   \   00004D   90....       MOV     DPTR,#__Constant_40533333
   \   000050   78..         MOV     R0,#?V0 + 4
   \   000052   12....       LCALL   ?L_MOV_X
   \   000055   78..         MOV     R0,#?V0 + 0
   \   000057   79..         MOV     R1,#?V0 + 4
   \   000059   12....       LCALL   ?FLT_MUL
   \   00005C   90....       MOV     DPTR,#__Constant_3a000000
   \   00005F   78..         MOV     R0,#?V0 + 4
   \   000061   12....       LCALL   ?L_MOV_X
   \   000064   78..         MOV     R0,#?V0 + 0
   \   000066   79..         MOV     R1,#?V0 + 4
   \   000068   12....       LCALL   ?FLT_MUL
   \   00006B   90....       MOV     DPTR,#ADC
   \   00006E   78..         MOV     R0,#?V0 + 0
   \   000070   12....       LCALL   ?L_MOV_TO_X
    252            temperature = ADC*10/33*150-50;
                               ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   000073   90....       MOV     DPTR,#ADC
   \   000076   78..         MOV     R0,#?V0 + 0
   \   000078   12....       LCALL   ?L_MOV_X
   \   00007B   90....       MOV     DPTR,#__Constant_41200000
   \   00007E   78..         MOV     R0,#?V0 + 4
   \   000080   12....       LCALL   ?L_MOV_X
   \   000083   78..         MOV     R0,#?V0 + 0
   \   000085   79..         MOV     R1,#?V0 + 4
   \   000087   12....       LCALL   ?FLT_MUL
   \   00008A   90....       MOV     DPTR,#__Constant_42040000
   \   00008D   78..         MOV     R0,#?V0 + 4
   \   00008F   12....       LCALL   ?L_MOV_X
   \   000092   78..         MOV     R0,#?V0 + 0
   \   000094   79..         MOV     R1,#?V0 + 4
   \   000096   12....       LCALL   ?FLT_DIV
   \   000099   90....       MOV     DPTR,#__Constant_43160000
   \   00009C   78..         MOV     R0,#?V0 + 4
   \   00009E   12....       LCALL   ?L_MOV_X
   \   0000A1   78..         MOV     R0,#?V0 + 0
   \   0000A3   79..         MOV     R1,#?V0 + 4
   \   0000A5   12....       LCALL   ?FLT_MUL
   \   0000A8   90....       MOV     DPTR,#__Constant_c2480000
   \   0000AB   78..         MOV     R0,#?V0 + 4
   \   0000AD   12....       LCALL   ?L_MOV_X
   \   0000B0   78..         MOV     R0,#?V0 + 0
   \   0000B2   79..         MOV     R1,#?V0 + 4
   \   0000B4   12....       LCALL   ?FLT_ADD
   \   0000B7   78..         MOV     R0,#?V0 + 0
   \   0000B9   12....       LCALL   ?FLT_TO_L
   \   0000BC   E5..         MOV     A,?V0 + 0
   \   0000BE   90....       MOV     DPTR,#temperature
   \   0000C1   F0           MOVX    @DPTR,A
    253          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "get_temperature_Message"
   \   0000C2   7F08         MOV     R7,#0x8
   \   0000C4   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   0000C7                REQUIRE _A_TCON
   \   0000C7                REQUIRE ADCL
   \   0000C7                REQUIRE ADCH

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    254          void delayMS(unsigned int ms)
   \                     delayMS:
    255          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   800E         SJMP    ??delayMS_0
    256            unsigned int i;
                                ^
Warning[Pe177]: variable "i" was declared but never referenced
    257            while(ms != 0)
    258            {  
    259             MicroWait(1000);  
   \                     ??delayMS_1:
   \   00000A                ; Setup parameters for call to function Onboard_wait
   \   00000A   7AE8         MOV     R2,#-0x18
   \   00000C   7B03         MOV     R3,#0x3
   \   00000E   12....       LCALL   ??Onboard_wait?relay
    260              ms--;  
   \   000011   EE           MOV     A,R6
   \   000012   24FF         ADD     A,#-0x1
   \   000014   1E           DEC     R6
   \   000015   EF           MOV     A,R7
   \   000016   34FF         ADDC    A,#-0x1
   \                     ??delayMS_0:
   \   000018   FF           MOV     R7,A
    261            }     
   \   000019   EE           MOV     A,R6
   \   00001A   4F           ORL     A,R7
   \   00001B   70ED         JNZ     ??delayMS_1
    262          }
   \   00001D   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_40533333:
   \   000000   33335340     DD 40533333H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3a000000:
   \   000000   0000003A     DD 3A000000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_41200000:
   \   000000   00002041     DD 41200000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_42040000:
   \   000000   00000442     DD 42040000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_43160000:
   \   000000   00001643     DD 43160000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c2480000:
   \   000000   000048C2     DD 0C2480000H

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Send_PERIDOIC_CMD?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Send_PERIDOIC_CMD

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ADCinital?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ADCinital

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??get_temperature_Message?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    get_temperature_Message

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??delayMS?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    delayMS

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     ADCinital                          0      0     16
     SampleApp_Init                     0      0      9
       -> ADCinital                     0      0     18
       -> osal_start_timerEx            0      0     18
       -> afRegister                    0      0     18
       -> RegisterForKeys               0      0     18
     SampleApp_ProcessEvent             0      0     10
       -> osal_msg_receive              0      0     20
       -> osal_msg_deallocate           0      0     20
       -> osal_msg_receive              0      0     20
       -> SampleApp_Send_PERIDOIC_CMD
                                        0      0     20
       -> osal_start_timerEx            0      0     20
     SampleApp_Send_PERIDOIC_CMD        0      0     29
       -> get_temperature_Message       0      0     20
       -> AF_DataRequest                0      0     38
     delayMS                            0      0      9
       -> Onboard_wait                  0      0     18
     get_temperature_Message            0      0     26
       -> ADCinital                     0      0     32


   Segment part sizes:

     Function/Label                      Bytes
     --------------                      -----
     _A_P0                                  1
     _A_TCON                                1
     ADCCON1                                1
     ADCCON3                                1
     ADCL                                   1
     ADCH                                   1
     P0SEL                                  1
     P0DIR                                  1
     SampleApp_ClusterList                  2
     SampleApp_SimpleDesc                  12
     SampleApp_epDesc                       6
     SampleApp_TaskID                       1
     SampleApp_NwkState                     1
     SampleApp_TransID                      1
     SampleApp_P2P_DstAddr                 12
     ok                                     1
     ADC                                    4
     temperature                            1
     str_t                                  4
     NUM                                    2
     SampleApp_Init                       103
     ?Subroutine0                           5
     SampleApp_ProcessEvent                81
     ?Subroutine1                           5
     SampleApp_Send_PERIDOIC_CMD          121
     ADCinital                             23
     get_temperature_Message              199
     delayMS                               32
     __Constant_40533333                    4
     __Constant_3a000000                    4
     __Constant_41200000                    4
     __Constant_42040000                    4
     __Constant_43160000                    4
     __Constant_c2480000                    4
     ??SampleApp_Init?relay                 6
     ??SampleApp_ProcessEvent?relay         6
     ??SampleApp_Send_PERIDOIC_CMD?relay    6
     ??ADCinital?relay                      6
     ??get_temperature_Message?relay        6
     ??delayMS?relay                        6

 
 569 bytes in segment BANKED_CODE
  36 bytes in segment BANK_RELAYS
   8 bytes in segment SFR_AN
  38 bytes in segment XDATA_ROM_C
  33 bytes in segment XDATA_Z
 
 605 bytes of CODE  memory
  14 bytes of CONST memory (+ 24 bytes shared)
   0 bytes of DATA  memory (+  8 bytes shared)
  33 bytes of XDATA memory

Errors: none
Warnings: 3
