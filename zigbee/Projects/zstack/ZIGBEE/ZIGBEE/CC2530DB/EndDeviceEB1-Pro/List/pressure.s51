///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        15/Nov/2018  11:11:20 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  H:\学习\论文\海洋\苏\源码                         /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\Source\pressure.c                              /
//    Command line       =  -f "H:\学习\论文\海洋\苏\源码                     /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg" /
//                           (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS) -f  /
//                          "H:\学习\论文\海洋\苏\源码                        /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg /
//                          " (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR   /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "H:\学习\论文\海洋\苏\源码 /
//                           (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIG /
//                          BEE\Source\pressure.c" -D ZIGBEEPRO -D            /
//                          NWK_AUTO_POLL -D ZTOOL_P1 -D xMT_TASK -D          /
//                          xMT_SYS_FUNC -D xMT_ZDO_FUNC -D                   /
//                          LCD_SUPPORTED=DEBUG -lC                           /
//                          "H:\学习\论文\海洋\苏\源码                        /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\EndDeviceEB1-Pro\List\" -lA           /
//                          "H:\学习\论文\海洋\苏\源码                        /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\EndDeviceEB1-Pro\List\"               /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          "H:\学习\论文\海洋\苏\源码                        /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\EndDeviceEB1-Pro\Obj\" -e --debug     /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          "H:\学习\论文\海洋\苏\源码                        /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\" -I "H:\学习\论文\海洋\苏\源码       /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\SOURCE\" -I                        /
//                          "H:\学习\论文\海洋\苏\源码                        /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I          /
//                          "H:\学习\论文\海洋\苏\源码                        /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" -I     /
//                          "H:\学习\论文\海洋\苏\源码                        /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE /
//                          \" -I "H:\学习\论文\海洋\苏\源码                  /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARGET\ /
//                          CC2530EB\" -I "H:\学习\论文\海洋\苏\源码          /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU\CC /
//                          SOC\" -I "H:\学习\论文\海洋\苏\源码               /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INCLUD /
//                          E\" -I "H:\学习\论文\海洋\苏\源码                 /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF\"  /
//                          -I "H:\学习\论文\海洋\苏\源码                     /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK\" /
//                           -I "H:\学习\论文\海洋\苏\源码                    /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SEC\" /
//                           -I "H:\学习\论文\海洋\苏\源码                    /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SAPI\ /
//                          " -I "H:\学习\论文\海洋\苏\源码                   /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SYS\" /
//                           -I "H:\学习\论文\海洋\苏\源码                    /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\ZDO\" /
//                           -I "H:\学习\论文\海洋\苏\源码                    /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W\"  /
//                          -I "H:\学习\论文\海洋\苏\源码                     /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\" -I   /
//                          "H:\学习\论文\海洋\苏\源码                        /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SA /
//                          DDR\" -I "H:\学习\论文\海洋\苏\源码               /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SD /
//                          ATA\" -I "H:\学习\论文\海洋\苏\源码               /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCLUDE /
//                          \" -I "H:\学习\论文\海洋\苏\源码                  /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH_LE /
//                          VEL\" -I "H:\学习\论文\海洋\苏\源码               /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEV /
//                          EL\srf04\" -I "H:\学习\论文\海洋\苏\源码          /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEV /
//                          EL\srf04\SINGLE_CHIP\" -Ohz --require_prototypes  /
//    List file          =  H:\学习\论文\海洋\苏\源码                         /
//                          (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGB /
//                          EE\CC2530DB\EndDeviceEB1-Pro\List\pressure.s51    /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME pressure

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FLT_ADD
        EXTERN ?FLT_DIV
        EXTERN ?FLT_MUL
        EXTERN ?FLT_TO_L
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?UL_TO_FLT
        EXTERN ?US_SHR
        EXTERN ?V0
        EXTERN __INIT_XDATA_Z

        PUBLIC ??ADCinital?relay
        FUNCTION ??ADCinital?relay,0203H
        PUBLIC ??SampleApp_Init?relay
        FUNCTION ??SampleApp_Init?relay,0203H
        PUBLIC ??SampleApp_ProcessEvent?relay
        FUNCTION ??SampleApp_ProcessEvent?relay,0203H
        PUBLIC ??SampleApp_Send_PERIDOIC_CMD?relay
        FUNCTION ??SampleApp_Send_PERIDOIC_CMD?relay,0203H
        PUBLIC ??delayMS?relay
        FUNCTION ??delayMS?relay,0203H
        PUBLIC ??get_pressure_Message?relay
        FUNCTION ??get_pressure_Message?relay,0203H
        PUBLIC ADC
        PUBWEAK ADCCON1
        PUBWEAK ADCCON3
        PUBWEAK ADCH
        PUBWEAK ADCL
        PUBLIC ADCinital
        FUNCTION ADCinital,0203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBWEAK P0DIR
        PUBWEAK P0SEL
        PUBLIC SampleApp_ClusterList
        PUBLIC SampleApp_Init
        FUNCTION SampleApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC SampleApp_NwkState
        PUBLIC SampleApp_P2P_DstAddr
        PUBLIC SampleApp_ProcessEvent
        FUNCTION SampleApp_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC SampleApp_Send_PERIDOIC_CMD
        FUNCTION SampleApp_Send_PERIDOIC_CMD,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 19, STACK
        PUBLIC SampleApp_SimpleDesc
        PUBLIC SampleApp_TaskID
        PUBLIC SampleApp_TransID
        PUBLIC SampleApp_epDesc
        PUBWEAK _A_TCON
        PUBWEAK __Constant_3a000000
        PUBWEAK __Constant_40533333
        PUBWEAK __Constant_41200000
        PUBWEAK __Constant_42040000
        PUBWEAK __Constant_43200000
        PUBWEAK __Constant_bfc00000
        PUBWEAK __Constant_c1700000
        PUBLIC delayMS
        FUNCTION delayMS,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC get_pressure_Message
        FUNCTION get_pressure_Message,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ok
        PUBLIC pressure
        PUBLIC str_t
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
osal_start_timerEx  SYMBOL "osal_start_timerEx"
afRegister          SYMBOL "afRegister"
RegisterForKeys     SYMBOL "RegisterForKeys"
osal_msg_receive    SYMBOL "osal_msg_receive"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
AF_DataRequest      SYMBOL "AF_DataRequest"
Onboard_wait        SYMBOL "Onboard_wait"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??Onboard_wait?relay SYMBOL "?relay", Onboard_wait
??RegisterForKeys?relay SYMBOL "?relay", RegisterForKeys
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
ADCinital           SYMBOL "ADCinital"
??ADCinital?relay   SYMBOL "?relay", ADCinital
SampleApp_Init      SYMBOL "SampleApp_Init"
??SampleApp_Init?relay SYMBOL "?relay", SampleApp_Init
SampleApp_ProcessEvent SYMBOL "SampleApp_ProcessEvent"
??SampleApp_ProcessEvent?relay SYMBOL "?relay", SampleApp_ProcessEvent
SampleApp_Send_PERIDOIC_CMD SYMBOL "SampleApp_Send_PERIDOIC_CMD"
??SampleApp_Send_PERIDOIC_CMD?relay SYMBOL "?relay", SampleApp_Send_PERIDOIC_CMD
delayMS             SYMBOL "delayMS"
??delayMS?relay     SYMBOL "?relay", delayMS
get_pressure_Message SYMBOL "get_pressure_Message"
??get_pressure_Message?relay SYMBOL "?relay", get_pressure_Message

        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RegisterForKeys
        FUNCTION RegisterForKeys,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Onboard_wait
        FUNCTION Onboard_wait,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??Onboard_wait?relay
        FUNCTION ??Onboard_wait?relay,00H
        EXTERN ??RegisterForKeys?relay
        FUNCTION ??RegisterForKeys?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H

// H:\学习\论文\海洋\苏\源码 (2)\下位机\下位机工程\Projects\zstack\ZIGBEE\ZIGBEE\Source\pressure.c
//    1 /**************************************************************************************************
//    2   Filename:       SampleApp.c
//    3   Revised:        $Date: 2009-03-18 15:56:27 -0700 (Wed, 18 Mar 2009) $
//    4   Revision:       $Revision: 19453 $
//    5 
//    6   Description:    Sample Application (no Profile).
//    7 
//    8 **************************************************************************************************/
//    9 
//   10 #include "OSAL.h"
//   11 #include "ZGlobals.h"
//   12 #include "AF.h"
//   13 #include "aps_groups.h"
//   14 #include "ZDApp.h"
//   15 #include <string.h>
//   16 #include <stdio.h>
//   17 #include "SampleApp.h"
//   18 #include "SampleAppHw.h"
//   19 
//   20 #include "OnBoard.h"

        ASEGN SFR_AN:DATA:NOROOT,088H
// union <unnamed> volatile __sfr _A_TCON
_A_TCON:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b4H
// unsigned char volatile __sfr ADCCON1
ADCCON1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b6H
// unsigned char volatile __sfr ADCCON3
ADCCON3:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0baH
// unsigned char volatile __sfr ADCL
ADCL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0bbH
// unsigned char volatile __sfr ADCH
ADCH:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f3H
// unsigned char volatile __sfr P0SEL
P0SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DATA8
        DS 1
//   21 
//   22 /* HAL */
//   23 #include "hal_lcd.h"
//   24 #include "hal_led.h"
//   25 #include "hal_key.h"
//   26 #include "MT_UART.h"
//   27 #include "MT_APP.h"
//   28 #include "MT.h"
//   29 #include "math.h"
//   30 
//   31 // This list should be filled with Application specific Cluster IDs.

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//   32 const cId_t SampleApp_ClusterList[ENDDEVICE_MAX_CLUSTERS] =
SampleApp_ClusterList:
        DW 1
//   33 {
//   34   ENDDEVIC1_MSG //Modified by user,区分每个终端的簇列表，第x个终端，则更改为ENDDEVICx_MSG
//   35 }; 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   36 const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
SampleApp_SimpleDesc:
        DB 20
        DATA16
        DW 3848
        DW 1
        DATA8
        DB 0
        DB 1
        DATA16
        DW SampleApp_ClusterList
        DATA8
        DB 1
        DATA16
        DW SampleApp_ClusterList
//   37 {
//   38   SAMPLEAPP_ENDPOINT,             
//   39   SAMPLEAPP_PROFID,              
//   40   SAMPLEAPP_DEVICEID,             
//   41   SAMPLEAPP_FLAGS,                
//   42   SAMPLEAPP_DEVICE_VERSION,       
//   43   ENDDEVICE_MAX_CLUSTERS,          
//   44   (cId_t *)SampleApp_ClusterList,  
//   45   ENDDEVICE_MAX_CLUSTERS,         
//   46   (cId_t *)SampleApp_ClusterList   
//   47 };
//   48 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   49 endPointDesc_t SampleApp_epDesc;
SampleApp_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z
//   50 
//   51 
//   52 /*********************************************************************
//   53  * LOCAL VARIABLES
//   54  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   55 uint8 SampleApp_TaskID;  
SampleApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   56                           

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   57 devStates_t SampleApp_NwkState;
SampleApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   58 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   59 uint8 SampleApp_TransID;  
SampleApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   60 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   61 afAddrType_t SampleApp_P2P_DstAddr;      //点播地址，即终端向协调器发送数据地址
SampleApp_P2P_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   62 uint8 ok;
ok:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//   63 float  ADC;
ADC:
        DS 4
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   64 uint8 pressure;
pressure:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//   65 uint8 str_t[4];
str_t:
        DS 4
        REQUIRE __INIT_XDATA_Z
//   66 /*********************************************************************
//   67  * LOCAL FUNCTIONS
//   68  */
//   69 void spi_master(void);
//   70 uint8 SampleApp_Send_PERIDOIC_CMD(void);     //定时串口发送函数
//   71 void ADCinital(void);
//   72 int get_pressure_Message(void);
//   73 void delayMS(unsigned int ms);
//   74 /*********************************************************************
//   75  * @fn      SampleApp_Init
//   76  *
//   77  * @brief   Initialization function for the Generic App Task.
//   78  *          This is called during initialization and should contain
//   79  *          any application specific initialization (ie. hardware
//   80  *          initialization/setup, table initialization, power up
//   81  *          notificaiton ... ).
//   82  *
//   83  * @param   task_id - the ID assigned by OSAL.  This ID should be
//   84  *                    used to send messages and set timers.
//   85  *
//   86  * @return  none
//   87  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   88 void SampleApp_Init( uint8 task_id )
SampleApp_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function SampleApp_Init
        CODE
//   89 { 
        FUNCALL SampleApp_Init, ADCinital
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, RegisterForKeys
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
//   90   SampleApp_TaskID = task_id;
        MOV     DPTR,#SampleApp_TaskID
        MOVX    @DPTR,A
//   91   SampleApp_NwkState = DEV_INIT;
        MOV     DPTR,#SampleApp_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//   92   SampleApp_TransID = 0;
        MOV     DPTR,#SampleApp_TransID
        CLR     A
        MOVX    @DPTR,A
//   93  
//   94   ADCinital();
        ; Setup parameters for call to function ADCinital
        LCALL   ??ADCinital?relay
//   95   osal_start_timerEx( SampleApp_TaskID, PERIDOIC_CMD, PERIODIC_CMD_TIME );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x30
        MOV     R5,#0x7
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//   96   
//   97   SampleApp_P2P_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //点播地址初始化
        MOV     DPTR,#SampleApp_P2P_DstAddr + 8
        MOV     A,#0x2
        MOVX    @DPTR,A
//   98   SampleApp_P2P_DstAddr.endPoint = SAMPLEAPP_ENDPOINT; 
        INC     DPTR
        MOV     A,#0x14
        MOVX    @DPTR,A
//   99   SampleApp_P2P_DstAddr.addr.shortAddr = 0x0000;            //发给协调器，协调器地址固定为0X0000，因此无需改动
        MOV     DPTR,#SampleApp_P2P_DstAddr
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  100 
//  101 
//  102   SampleApp_epDesc.endPoint = SAMPLEAPP_ENDPOINT;
        MOV     DPTR,#SampleApp_epDesc
        MOV     A,#0x14
        MOVX    @DPTR,A
//  103   SampleApp_epDesc.task_id = &SampleApp_TaskID;
        INC     DPTR
        MOV     A,#SampleApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(SampleApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//  104   SampleApp_epDesc.simpleDesc
//  105             = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
        INC     DPTR
        MOV     A,#SampleApp_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//  106   SampleApp_epDesc.latencyReq = noLatencyReqs;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  107  
//  108   afRegister( &SampleApp_epDesc );
        ; Setup parameters for call to function afRegister
        MOV     R2,#SampleApp_epDesc & 0xff
        MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//  109  
//  110   RegisterForKeys( SampleApp_TaskID );
        ; Setup parameters for call to function RegisterForKeys
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??RegisterForKeys?relay
        CFI EndBlock cfiBlock0
//  111 
//  112   
//  113 }
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  114 
//  115 /*********************************************************************
//  116  * @fn      SampleApp_ProcessEvent
//  117  *
//  118  * @brief   Generic Application Task event processor.  This function
//  119  *          is called to process all events for the task.  Events
//  120  *          include timers, messages and any other user defined events.
//  121  *
//  122  * @param   task_id  - The OSAL assigned task ID.
//  123  * @param   events - events to process.  This is a bit map and can
//  124  *                   contain more than one event.
//  125  *
//  126  * @return  none  osal_start_timerEx( SampleApp_TaskID, PERIDOIC_CMD, PERIODIC_CMD_TIME );
//  127  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  128 uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
SampleApp_ProcessEvent:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function SampleApp_ProcessEvent
        CODE
//  129 {
        FUNCALL SampleApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, SampleApp_Send_PERIDOIC_CMD
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  130   afIncomingMSGPacket_t *MSGpkt;
//  131   (void)task_id;  // Intentionally unreferenced parameter
//  132 
//  133   if ( events & SYS_EVENT_MSG )
        ANL     A,#0x80
        JZ      ??SampleApp_ProcessEvent_0
//  134   {
//  135     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??SampleApp_ProcessEvent_1
//  136     while ( MSGpkt )
//  137     {
//  138       switch ( MSGpkt->hdr.event )
??SampleApp_ProcessEvent_2:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        XRL     A,#0xd1
        JNZ     ??SampleApp_ProcessEvent_3
//  139       {
//  140         // Received when a key is pressed
//  141         case KEY_CHANGE:
//  142          
//  143           break;
//  144 
//  145         // Received when a messages is received (OTA) for this endpoint
//  146         case AF_INCOMING_MSG_CMD:
//  147           
//  148           break;
//  149 
//  150         // Received whenever the device changes state in the network
//  151         case ZDO_STATE_CHANGE:
//  152           SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#SampleApp_NwkState
        MOVX    @DPTR,A
//  153           if ( (SampleApp_NwkState == DEV_END_DEVICE) )
//  154           {
//  155            //只有终端设备开启，2秒温度换算任务
//  156            //osal_start_timerEx( SampleApp_TaskID, PERIDOIC_CMD, PERIODIC_CMD_TIME );
//  157           }
//  158         
//  159           break;
//  160 
//  161         default:
//  162           break;
//  163       }
//  164 
//  165       // Release the memory
//  166       osal_msg_deallocate( (uint8 *)MSGpkt );
??SampleApp_ProcessEvent_3:
        ; Setup parameters for call to function osal_msg_deallocate
        LCALL   ??osal_msg_deallocate?relay
//  167 
//  168       // Next - if one is available
//  169       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
??SampleApp_ProcessEvent_1:
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
//  170     }
        MOV     A,R2
        ORL     A,R3
        JNZ     ??SampleApp_ProcessEvent_2
//  171 
//  172     // return unprocessed events
//  173     return (events ^ SYS_EVENT_MSG);
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        XRL     A,#0x80
        MOV     R3,A
        SJMP    ??SampleApp_ProcessEvent_4
//  174   }
//  175 
//  176   if ( events & PERIDOIC_CMD )//2S定时时间到，调用函数SampleApp_Send_PERIDOIC_CMD计算温度值
??SampleApp_ProcessEvent_0:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.0
        JNC     ??SampleApp_ProcessEvent_5
//  177     {
//  178       SampleApp_Send_PERIDOIC_CMD();
        ; Setup parameters for call to function SampleApp_Send_PERIDOIC_CMD
        LCALL   ??SampleApp_Send_PERIDOIC_CMD?relay
//  179       osal_start_timerEx( SampleApp_TaskID, PERIDOIC_CMD, PERIODIC_CMD_TIME );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x30
        MOV     R5,#0x7
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  180    //启动定时事件，周期为PERIODIC_CMD_TIME
//  181     }
//  182   return 0;
??SampleApp_ProcessEvent_5:
        MOV     R2,#0x0
        MOV     R3,#0x0
        CFI EndBlock cfiBlock2
??SampleApp_ProcessEvent_4:
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1
//  183 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3
//  184 
//  185  
//  186 /*********************************************************************
//  187 *********************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  188 uint8 SampleApp_Send_PERIDOIC_CMD(void)//计算温度值
SampleApp_Send_PERIDOIC_CMD:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function SampleApp_Send_PERIDOIC_CMD
        CODE
//  189 {
        FUNCALL SampleApp_Send_PERIDOIC_CMD, get_pressure_Message
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Send_PERIDOIC_CMD, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  190   if(1)            
//  191     {                                   
//  192              get_pressure_Message();
        ; Setup parameters for call to function get_pressure_Message
        LCALL   ??get_pressure_Message?relay
//  193              str_t[0] = 2;//终端2压力编号
        MOV     DPTR,#str_t
        MOV     A,#0x2
        MOVX    @DPTR,A
//  194              str_t[1] = (uint8)pressure;   
        MOV     DPTR,#pressure
        MOVX    A,@DPTR
        MOV     DPTR,#str_t + 1
        MOVX    @DPTR,A
//  195              if(pressure <= 7)
        CLR     C
        SUBB    A,#0x8
        MOV     DPTR,#str_t + 2
        JNC     ??SampleApp_Send_PERIDOIC_CMD_0
//  196              {
//  197                str_t[2] = 1;
        MOV     A,#0x1
        SJMP    ??SampleApp_Send_PERIDOIC_CMD_1
//  198              } 
//  199              else 
//  200              {
//  201                str_t[2] = 0;              
??SampleApp_Send_PERIDOIC_CMD_0:
        CLR     A
??SampleApp_Send_PERIDOIC_CMD_1:
        MOVX    @DPTR,A
//  202              }
//  203 
//  204              //sprintf(&str_t[2], "%3.2f", RTD_Temperature);//将温度浮点数转化为对应字符串
//  205              
//  206              AF_DataRequest( &SampleApp_P2P_DstAddr, &SampleApp_epDesc,//无线发送信息到协调器
//  207                                  ENDDEVIC1_MSG, 
//  208                                  3,            //发送数据长度,根据用户数据长度改变
//  209                                  str_t,
//  210                                  &SampleApp_TransID,
//  211                                  AF_DISCV_ROUTE,AF_DEFAULT_RADIUS);
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     ?V0 + 0,#SampleApp_TransID & 0xff
        MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 13)
        MOV     ?V0 + 0,#str_t & 0xff
        MOV     ?V0 + 1,#(str_t >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 0,#0x3
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     R1,#0x20
        MOV     R4,#SampleApp_epDesc & 0xff
        MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
        MOV     R2,#SampleApp_P2P_DstAddr & 0xff
        MOV     R3,#(SampleApp_P2P_DstAddr >> 8) & 0xff
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  212  
//  213     }
//  214    return 0;  
        MOV     R1,#0x0
        SJMP    ?Subroutine1
        CFI EndBlock cfiBlock4
//  215 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  216 void ADCinital(void)
ADCinital:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function ADCinital
        CODE
//  217 {
        ; Saved register size: 0
        ; Auto size: 0
//  218   ADCH&=0X00;//清EOC标志
        MOV     A,0xbb
        MOV     0xbb,#0x0
//  219   P0DIR &= ~0x40;
        ANL     0xfd,#0xbf
//  220   //将 P1.1 定义为外设功能
//  221   P0SEL |= 0x40;
        ORL     0xf3,#0x40
//  222   ADCCON3=0XB6;//单次转换，参考电压为电源电压，对P0.6采样，精度12位            
        MOV     0xb6,#-0x4a
//  223   ADCCON1=0X30;//停止AD
        MOV     0xb4,#0x30
//  224   ADCCON1|=0X40;//开始AD
        ORL     0xb4,#0x40
//  225 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock5
        REQUIRE ADCH
        REQUIRE P0DIR
        REQUIRE P0SEL
        REQUIRE ADCCON3
        REQUIRE ADCCON1

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  226 int get_pressure_Message()
get_pressure_Message:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function get_pressure_Message
        CODE
//  227 {
        FUNCALL get_pressure_Message, ADCinital
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
//  228  
//  229   unsigned short  NUM;
//  230   
//  231    while ( !ADCIF ) ;
??get_pressure_Message_0:
        MOV     C,0x88.5
        JNC     ??get_pressure_Message_0
//  232         
//  233    NUM = ADCL;
        MOV     A,0xba
        MOV     ?V0 + 0,A
//  234    NUM |= ((uint16)ADCH) << 8 ;//这里注意一下
//  235    NUM >>= 4;
        MOV     A,0xbb
        MOV     R1,A
        MOV     A,?V0 + 0
        MOV     ?V0 + 2,A
        MOV     A,R1
        MOV     ?V0 + 3,A
        MOV     A,#0x4
        MOV     R0,#?V0 + 2
        LCALL   ?US_SHR
        MOV     ?V0 + 0,?V0 + 2
        MOV     ?V0 + 1,?V0 + 3
//  236   
//  237   ADCinital();
        ; Setup parameters for call to function ADCinital
        LCALL   ??ADCinital?relay
//  238   if (NUM&0x8000) NUM=0;
//  239   if (NUM>4000) NUM=0;
        CLR     C
        MOV     A,?V0 + 0
        SUBB    A,#-0x5f
        MOV     A,?V0 + 1
        SUBB    A,#0xf
        JC      ??get_pressure_Message_1
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
//  240   ADC=(float)((float)NUM*3.30/2048);  
??get_pressure_Message_1:
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 0
        LCALL   ?UL_TO_FLT
        MOV     DPTR,#__Constant_40533333
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_3a000000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     DPTR,#ADC
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//  241   pressure =(ADC-1.5)*10/33*160-15;
        MOV     DPTR,#ADC
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_bfc00000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_ADD
        MOV     DPTR,#__Constant_41200000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_42040000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     DPTR,#__Constant_43200000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_c1700000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_ADD
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     A,?V0 + 0
        MOV     DPTR,#pressure
        MOVX    @DPTR,A
//  242 }
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock6
        REQUIRE _A_TCON
        REQUIRE ADCL
        REQUIRE ADCH

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  243 void delayMS(unsigned int ms)
delayMS:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI Function delayMS
        CODE
//  244 {
        FUNCALL delayMS, Onboard_wait
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        SJMP    ??delayMS_0
//  245   unsigned int i;
//  246   while(ms != 0)
//  247   {  
//  248    MicroWait(1000);  
??delayMS_1:
        ; Setup parameters for call to function Onboard_wait
        MOV     R2,#-0x18
        MOV     R3,#0x3
        LCALL   ??Onboard_wait?relay
//  249     ms--;  
        MOV     A,R6
        ADD     A,#-0x1
        DEC     R6
        MOV     A,R7
        ADDC    A,#-0x1
??delayMS_0:
        MOV     R7,A
//  250   }     
        MOV     A,R6
        ORL     A,R7
        JNZ     ??delayMS_1
//  251 }
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock7

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_40533333:
        DD 40533333H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3a000000:
        DD 3A000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_bfc00000:
        DD 0BFC00000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_41200000:
        DD 41200000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42040000:
        DD 42040000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_43200000:
        DD 43200000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_c1700000:
        DD 0C1700000H

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_Send_PERIDOIC_CMD?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_Send_PERIDOIC_CMD

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ADCinital?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ADCinital

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??get_pressure_Message?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    get_pressure_Message

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??delayMS?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    delayMS

        END
// 
// 553 bytes in segment BANKED_CODE
//  36 bytes in segment BANK_RELAYS
//   7 bytes in segment SFR_AN
//  42 bytes in segment XDATA_ROM_C
//  31 bytes in segment XDATA_Z
// 
// 589 bytes of CODE  memory
//  14 bytes of CONST memory (+ 28 bytes shared)
//   0 bytes of DATA  memory (+  7 bytes shared)
//  31 bytes of XDATA memory
//
//Errors: none
//Warnings: 3
